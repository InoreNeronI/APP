{"version":3,"file":"585.d6fd4dfa7c9f2507.js","mappings":"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","names":["_c0","_c1","EditorInputComponent_div_1_label_2_Template","rf","ctx","i0","ctx_r2","button","label","EditorInputComponent_div_1_Template","_r5","ctx_r4","closeInputWindow","$event","ctx_r6","value","ctx_r7","onCommand","ctx_r0","margin","opacity","EditorSelectComponent_option_1_Template","i_r1","$implicit","_c2","EditorDropdownComponent_option_4_Template","i_r2","_c3","EditorComponent_ng_container_2_st_separator_1_Template","EditorComponent_ng_container_2_st_button_2_Template","_r10","ctx_r9","execCommand","item_r2","queryCommandState","command","EditorComponent_ng_container_2_st_select_3_Template","_r13","ctx_r12","ctx_r5","EditorComponent_ng_container_2_st_color_picker_4_Template","_r16","ctx_r15","EditorComponent_ng_container_2_st_input_5_Template","_r19","ctx_r18","EditorComponent_ng_container_2_st_dropdown_6_Template","_r22","ctx_r21","EditorComponent_ng_container_2_Template","type","toolbarItemType","Separator","Button","Select","Color","Input","Dropdown","ToolbarItemType","UNDO_BUTTON","icon","title","SEPARATOR","BOLD_BUTTON","ITALIC_BUTTON","ST_BUTTONS","items","text","CommandService","constructor","document","this","isCommandWithValue","item","isCommandWithState","getQueryCommandState","buttons","filter","reduce","acc","curr","queryCommandValue","String","static","ɵfac","t","DOCUMENT","ɵprov","token","factory","EditorButtonComponent","EventEmitter","emit","ɵcmp","selectors","inputs","state","outputs","decls","vars","consts","template","styles","EditorColorPickerComponent","rgbStringToHex","rgb","match","map","x","hex","Number","toString","length","join","_r1","_r0","click","target","dependencies","i2","EditorInputComponent","element","showInputWindow","selectionRange","loadSelection","transform","openInputWindow","saveSelection","setTimeout","windowElement","nativeElement","getBoundingClientRect","width","inputElement","focus","outsideClick","contains","selection","defaultView","getSelection","removeAllRanges","addRange","rangeCount","getRangeAt","viewQuery","_t","first","hostBindings","i2$1","EditorSelectComponent","ngOnInit","EditorSeparatorComponent","MUTATION_OBSERVER_CONFIG","attributes","childList","subtree","characterData","DomModifyDirective","domModify","observer","MutationObserver","observe","ngOnDestroy","disconnect","ɵdir","SelectionChangeDirective","selectionChange","selectionchange","activeElement","EditorDropdownComponent","val","_button","_tempButton","ngAfterViewInit","selectElement","find","_r3","DEFAULT_CONFIG","placeholder","EditorComponent","config","_config","commandService","content","isDisabled","updateContentEditable","writeValue","registerOnChange","fn","onChangeFn","registerOnTouched","onTouchedFn","setDisabledState","contentEditable","innerHTML","fetchQueryCommandState","trackBy","_","name","features","provide","NG_VALUE_ACCESSOR","useExisting","multi","NgxSimpleTextEditorModule","ɵmod","ɵinj","imports","CommonModule","FormsModule","ReactiveFormsModule","head_r3","column_r6","TableComponent_div_0_tr_9_td_1_Template","row_r4","_r8","deleteByID","id","getArrayDataFromJSON","currentType","TableComponent_div_0_th_4_Template","TableComponent_div_0_tr_9_Template","getArrayFieldsFromJSON","data","TableComponent","http","toaster","translateService","json","field","fields","push","internalFieldsFilter","Object","keys","array","fieldsToRemoveFromResponse","indexOf","delete","environment","apiUrl","pipe","catchError","err","error","throwError","subscribe","success","instant","deleted","splice","i1","i3","core","Xpm","TableComponent_div_0_Template","AdminComponent","subjectService","unitService","exerciseService","subjects$","get","units$","exercises$","currentTab","currentService","setCurrentNav","event","setCurrentData","Utils","field_r1","ctx_r3","formControlsArray","EditItemComponent_div_1_input_4_Template","EditItemComponent_div_1_st_editor_5_Template","EditItemComponent","route","_formBuilder","_location","htmlContent","form","group","paramMap","params","parseInt","getOne","details","control","disabled","Validators","required","addControl","backClicked","back","submit","edit","i4","i5","i6","i7","i8","EditItemComponent_div_1_Template","NewItemComponent_div_1_input_4_Template","NewItemComponent_div_1_st_editor_5_Template","NewItemComponent","add","NewItemComponent_div_1_Template","AuthGuard","auth","router","canActivate","_this","_asyncToGenerator","isAdmin","isUser","info","navigate","queryParams","returnUrl","url","Yz7","routes","path","component","AdminRoutingModule","oAB","cJS","RouterModule","forChild","AdminModule","TranslateModule"],"sourceRoot":"webpack:///","sources":["./node_modules/ngx-simple-text-editor/fesm2022/ngx-simple-text-editor.mjs","./src/app/modules/admin/components/table/table.component.html","./src/app/modules/admin/components/table/table.component.ts","./src/app/modules/admin/containers/admin/admin.component.ts","./src/app/modules/admin/containers/admin/admin.component.html","./src/app/utils.ts","./src/app/modules/admin/components/edit-item/edit-item.component.html","./src/app/modules/admin/components/edit-item/edit-item.component.ts","./src/app/modules/admin/components/new-item/new-item.component.html","./src/app/modules/admin/components/new-item/new-item.component.ts","./src/app/modules/auth/auth.guard.ts","./src/app/modules/admin/admin-routing.module.ts","./src/app/modules/admin/admin.module.ts"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { Injectable, Inject, EventEmitter, Component, Input, Output, ViewChild, HostListener, Directive, NgModule } from '@angular/core';\nimport * as i2$1 from '@angular/common';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport * as i2 from '@angular/forms';\nimport { NG_VALUE_ACCESSOR, FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nvar ToolbarItemType;\n(function (ToolbarItemType) {\n    ToolbarItemType[ToolbarItemType[\"Separator\"] = 0] = \"Separator\";\n    ToolbarItemType[ToolbarItemType[\"Button\"] = 1] = \"Button\";\n    ToolbarItemType[ToolbarItemType[\"Select\"] = 2] = \"Select\";\n    ToolbarItemType[ToolbarItemType[\"Color\"] = 3] = \"Color\";\n    ToolbarItemType[ToolbarItemType[\"Input\"] = 4] = \"Input\";\n    ToolbarItemType[ToolbarItemType[\"Dropdown\"] = 5] = \"Dropdown\";\n})(ToolbarItemType || (ToolbarItemType = {}));\n\nconst UNDO_BUTTON = { type: ToolbarItemType.Button, command: \"undo\" /* ExecCommand.undo */, icon: 'fas fa-undo', title: 'undo' };\nconst REDO_BUTTON = { type: ToolbarItemType.Button, command: \"redo\" /* ExecCommand.redo */, icon: 'fas fa-redo', title: 'redo' };\nconst REMOVE_FORMAT_BUTTON = { type: ToolbarItemType.Button, command: \"removeFormat\" /* ExecCommand.removeFormat */, icon: 'fas fa-remove-format', title: 'remove format' };\nconst SEPARATOR = { type: ToolbarItemType.Separator };\nconst BOLD_BUTTON = { type: ToolbarItemType.Button, command: \"bold\" /* ExecCommand.bold */, icon: 'fas fa-bold', title: 'bold' };\nconst ITALIC_BUTTON = { type: ToolbarItemType.Button, command: \"italic\" /* ExecCommand.italic */, icon: 'fas fa-italic', title: 'italic' };\nconst UNDERLINE_BUTTON = { type: ToolbarItemType.Button, command: \"underline\" /* ExecCommand.underline */, icon: 'fas fa-underline', title: 'underline' };\nconst STRIKE_THROUGH_BUTTON = { type: ToolbarItemType.Button, command: \"strikeThrough\" /* ExecCommand.strikeThrough */, icon: 'fas fa-strikethrough', title: 'strikethrough' };\nconst JUSTIFY_LEFT_BUTTON = { type: ToolbarItemType.Button, command: \"justifyLeft\" /* ExecCommand.justifyLeft */, icon: 'fas fa-align-left', title: 'align left' };\nconst JUSTIFY_CENTER_BUTTON = { type: ToolbarItemType.Button, command: \"justifyCenter\" /* ExecCommand.justifyCenter */, icon: 'fas fa-align-center', title: 'align center' };\nconst JUSTIFY_RIGHT_BUTTON = { type: ToolbarItemType.Button, command: \"justifyRight\" /* ExecCommand.justifyRight */, icon: 'fas fa-align-right', title: 'align right' };\nconst JUSTIFY_FULL_BUTTON = { type: ToolbarItemType.Button, command: \"justifyFull\" /* ExecCommand.justifyFull */, icon: 'fas fa-align-justify', title: 'align justify' };\nconst ORDERED_LIST_BUTTON = { type: ToolbarItemType.Button, command: \"insertOrderedList\" /* ExecCommand.insertOrderedList */, icon: 'fas fa-list-ol', title: 'ordered list' };\nconst UNORDERED_LIST_BUTTON = { type: ToolbarItemType.Button, command: \"insertUnorderedList\" /* ExecCommand.insertUnorderedList */, icon: 'fas fa-list-ul', title: 'unordered list' };\nconst INDENT_BUTTON = { type: ToolbarItemType.Button, command: \"indent\" /* ExecCommand.indent */, icon: 'fas fa-indent', title: 'indent' };\nconst OUTDENT_BUTTON = { type: ToolbarItemType.Button, command: \"outdent\" /* ExecCommand.outdent */, icon: 'fas fa-outdent', title: 'outdent' };\nconst SUBSCRIPT_BUTTON = { type: ToolbarItemType.Button, command: \"subscript\" /* ExecCommand.subscript */, icon: 'fas fa-subscript', title: 'subscript' };\nconst SUPERSCRIPT_BUTTON = { type: ToolbarItemType.Button, command: \"superscript\" /* ExecCommand.superscript */, icon: 'fas fa-superscript', title: 'superscript' };\nconst FONT_SIZE_SELECT = {\n    type: ToolbarItemType.Select, command: \"fontSize\" /* ExecCommand.fontSize */, title: 'font size', items: [\n        { value: 1, label: '1' },\n        { value: 2, label: '2' },\n        { value: 3, label: '3' },\n        { value: 4, label: '4' },\n        { value: 5, label: '5' },\n        { value: 6, label: '6' },\n        { value: 7, label: '7' },\n    ]\n};\nconst LINK_INPUT = { type: ToolbarItemType.Input, command: \"createLink\" /* ExecCommand.createLink */, icon: 'fas fa-link', text: 'Create link', title: 'create link', label: 'Create link' };\nconst UNLINK_BUTTON = { type: ToolbarItemType.Button, command: \"unlink\" /* ExecCommand.unlink */, icon: 'fas fa-unlink', title: 'unlink' };\nconst FORE_COLOR = { type: ToolbarItemType.Color, command: \"foreColor\" /* ExecCommand.foreColor */, icon: 'fas fa-palette', title: 'font color' };\nconst IMAGE_INPUT = { type: ToolbarItemType.Input, command: \"insertImage\" /* ExecCommand.insertImage */, icon: 'fas fa-image', text: 'Add image', title: 'add image', label: 'Create image from link' };\nconst CUSTOM = {\n    type: ToolbarItemType.Dropdown, label: 'Custom', title: 'test custom', items: [\n        { command: \"insertHTML\" /* ExecCommand.insertHTML */, value: '<b>This is bold<b>', label: 'Custom bold text' },\n        { command: \"italic\" /* ExecCommand.italic */, value: null, label: 'Make Italic' },\n    ]\n};\nconst ST_BUTTONS = [\n    UNDO_BUTTON,\n    REDO_BUTTON,\n    REMOVE_FORMAT_BUTTON,\n    SEPARATOR,\n    BOLD_BUTTON,\n    ITALIC_BUTTON,\n    UNDERLINE_BUTTON,\n    STRIKE_THROUGH_BUTTON,\n    SEPARATOR,\n    JUSTIFY_LEFT_BUTTON,\n    JUSTIFY_CENTER_BUTTON,\n    JUSTIFY_RIGHT_BUTTON,\n    JUSTIFY_FULL_BUTTON,\n    SEPARATOR,\n    ORDERED_LIST_BUTTON,\n    UNORDERED_LIST_BUTTON,\n    SEPARATOR,\n    INDENT_BUTTON,\n    OUTDENT_BUTTON,\n    SEPARATOR,\n    SUBSCRIPT_BUTTON,\n    SUPERSCRIPT_BUTTON,\n    SEPARATOR,\n    FONT_SIZE_SELECT,\n    LINK_INPUT,\n    UNLINK_BUTTON,\n    SEPARATOR,\n    IMAGE_INPUT,\n    FORE_COLOR,\n];\n\nclass CommandService {\n    constructor(document) {\n        this.document = document;\n    }\n    isCommandWithValue(item) {\n        return item.type === ToolbarItemType.Select || item.type === ToolbarItemType.Color;\n    }\n    isCommandWithState(item) {\n        return item.type === ToolbarItemType.Button;\n    }\n    getQueryCommandState(buttons) {\n        return buttons\n            .filter(item => this.isCommandWithValue(item) || this.isCommandWithState(item))\n            .reduce((acc, curr) => ({\n            ...acc,\n            [curr.command]: this.isCommandWithValue(curr) ?\n                this.document.queryCommandValue(String(curr.command)) :\n                this.document.queryCommandState(String(curr.command)),\n        }), {});\n    }\n    execCommand(command, value) {\n        this.document.execCommand(command, false, value ? String(value) : value);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.2\", ngImport: i0, type: CommandService, deps: [{ token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.2.2\", ngImport: i0, type: CommandService }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.2\", ngImport: i0, type: CommandService, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }]; } });\n\nclass EditorButtonComponent {\n    constructor() {\n        this.command = new EventEmitter();\n    }\n    onCommand(command) {\n        this.command.emit(command);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.2\", ngImport: i0, type: EditorButtonComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.2\", type: EditorButtonComponent, selector: \"st-button\", inputs: { button: \"button\", state: \"state\" }, outputs: { command: \"command\" }, ngImport: i0, template: \"<button class=\\\"st-button st-toolbar-item\\\"\\n        [title]=\\\"button?.title || ''\\\"\\n        (click)=\\\"onCommand(button?.command)\\\"\\n        [class.active]=\\\"state\\\">\\n  <i [class]=\\\"button?.icon\\\"></i>\\n</button>\\n\", styles: [\".st-toolbar-item{border:0;padding:8px 14px;background-color:#fff;border-radius:5px;margin-right:1px;cursor:pointer}.st-toolbar-item:hover{background-color:#e0e0e0}.st-toolbar-item:focus{outline-color:#424242}.st-button:hover{background-color:#e0e0e0}.st-button:active{transform:scale(.98);box-shadow:1px 1px 7px 1px #e0e0e0}.st-button.active{background-color:#424242;color:#fff}\\n\"] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.2\", ngImport: i0, type: EditorButtonComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'st-button', template: \"<button class=\\\"st-button st-toolbar-item\\\"\\n        [title]=\\\"button?.title || ''\\\"\\n        (click)=\\\"onCommand(button?.command)\\\"\\n        [class.active]=\\\"state\\\">\\n  <i [class]=\\\"button?.icon\\\"></i>\\n</button>\\n\", styles: [\".st-toolbar-item{border:0;padding:8px 14px;background-color:#fff;border-radius:5px;margin-right:1px;cursor:pointer}.st-toolbar-item:hover{background-color:#e0e0e0}.st-toolbar-item:focus{outline-color:#424242}.st-button:hover{background-color:#e0e0e0}.st-button:active{transform:scale(.98);box-shadow:1px 1px 7px 1px #e0e0e0}.st-button.active{background-color:#424242;color:#fff}\\n\"] }]\n        }], propDecorators: { button: [{\n                type: Input\n            }], state: [{\n                type: Input\n            }], command: [{\n                type: Output\n            }] } });\n\nconst DEFAULT_COLOR = '#000000';\nclass EditorColorPickerComponent {\n    constructor() {\n        this.command = new EventEmitter();\n    }\n    onCommand(command, value) {\n        this.command.emit({ command, value });\n    }\n    rgbStringToHex(rgb) {\n        const match = String(rgb).match(/rgba?\\((\\d{1,3}), ?(\\d{1,3}), ?(\\d{1,3})\\)?(?:, ?(\\d(?:\\.\\d?))\\))?/);\n        return !match ? DEFAULT_COLOR : '#' + [match[1], match[2], match[3]].map(x => {\n            const hex = Number(x).toString(16);\n            return hex.length === 1 ? '0' + hex : hex;\n        }).join('');\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.2\", ngImport: i0, type: EditorColorPickerComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.2\", type: EditorColorPickerComponent, selector: \"st-color-picker\", inputs: { button: \"button\", state: \"state\" }, outputs: { command: \"command\" }, ngImport: i0, template: \"<button class=\\\"st-button st-toolbar-item\\\" [title]=\\\"button?.title || ''\\\" (click)=\\\"colorPicker.click()\\\">\\n  {{rgbStringToHex(state)}}\\n  <input #colorPicker class=\\\"st-color-picker\\\" type=\\\"color\\\" [ngModel]=\\\"rgbStringToHex(state)\\\" tabindex=\\\"-1\\\"\\n         (change)=\\\"onCommand(button?.command, $event.target.value)\\\" onmousedown='return false;' onselectstart='return false;'>\\n  <i [class]=\\\"button?.icon\\\" [style.color]=\\\"state\\\"></i>\\n</button>\\n\", styles: [\".st-toolbar-item{border:0;padding:8px 14px;background-color:#fff;border-radius:5px;margin-right:1px;cursor:pointer}.st-toolbar-item:hover{background-color:#e0e0e0}.st-toolbar-item:focus{outline-color:#424242}.st-button:hover{background-color:#e0e0e0}.st-button:active{transform:scale(.98);box-shadow:1px 1px 7px 1px #e0e0e0}.st-button.active{background-color:#424242;color:#fff}.st-color-picker{width:0;height:0;border:0;padding:0;margin:0;pointer-events:none}\\n\"], dependencies: [{ kind: \"directive\", type: i2.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { kind: \"directive\", type: i2.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { kind: \"directive\", type: i2.NgModel, selector: \"[ngModel]:not([formControlName]):not([formControl])\", inputs: [\"name\", \"disabled\", \"ngModel\", \"ngModelOptions\"], outputs: [\"ngModelChange\"], exportAs: [\"ngModel\"] }] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.2\", ngImport: i0, type: EditorColorPickerComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'st-color-picker', template: \"<button class=\\\"st-button st-toolbar-item\\\" [title]=\\\"button?.title || ''\\\" (click)=\\\"colorPicker.click()\\\">\\n  {{rgbStringToHex(state)}}\\n  <input #colorPicker class=\\\"st-color-picker\\\" type=\\\"color\\\" [ngModel]=\\\"rgbStringToHex(state)\\\" tabindex=\\\"-1\\\"\\n         (change)=\\\"onCommand(button?.command, $event.target.value)\\\" onmousedown='return false;' onselectstart='return false;'>\\n  <i [class]=\\\"button?.icon\\\" [style.color]=\\\"state\\\"></i>\\n</button>\\n\", styles: [\".st-toolbar-item{border:0;padding:8px 14px;background-color:#fff;border-radius:5px;margin-right:1px;cursor:pointer}.st-toolbar-item:hover{background-color:#e0e0e0}.st-toolbar-item:focus{outline-color:#424242}.st-button:hover{background-color:#e0e0e0}.st-button:active{transform:scale(.98);box-shadow:1px 1px 7px 1px #e0e0e0}.st-button.active{background-color:#424242;color:#fff}.st-color-picker{width:0;height:0;border:0;padding:0;margin:0;pointer-events:none}\\n\"] }]\n        }], propDecorators: { button: [{\n                type: Input\n            }], state: [{\n                type: Input\n            }], command: [{\n                type: Output\n            }] } });\n\nconst APPROX_WIDTH_THRESHOLD = 278;\nconst MARGIN_OFFSET = -150;\nclass EditorInputComponent {\n    constructor(element, document) {\n        this.element = element;\n        this.document = document;\n        this.command = new EventEmitter();\n        this.showInputWindow = false;\n        this.value = '';\n        this.margin = 0; // workaround fox window width computing\n        this.opacity = 0; // workaround fox window width computing\n    }\n    onCommand() {\n        if (this.value) {\n            if (this.selectionRange) {\n                this.loadSelection();\n            }\n            this.closeInputWindow();\n            this.command.emit({\n                command: this.button.command,\n                value: this.button.transform ? this.button.transform(this.value) : this.value\n            });\n            this.value = '';\n        }\n    }\n    openInputWindow() {\n        this.saveSelection();\n        this.showInputWindow = true;\n        setTimeout(() => {\n            this.margin = this.windowElement.nativeElement.getBoundingClientRect().width < APPROX_WIDTH_THRESHOLD ? MARGIN_OFFSET : 0;\n            this.opacity = 1;\n            this.inputElement.nativeElement.focus();\n        });\n    }\n    closeInputWindow() {\n        this.showInputWindow = false;\n        this.margin = 0;\n        this.opacity = 0;\n    }\n    outsideClick($event) {\n        if (!this.element.nativeElement.contains($event.target) && this.showInputWindow) {\n            this.closeInputWindow();\n        }\n    }\n    loadSelection() {\n        const selection = this.document.defaultView.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(this.selectionRange);\n        this.selectionRange = null;\n    }\n    saveSelection() {\n        const selection = this.document.defaultView.getSelection();\n        this.selectionRange = selection.rangeCount === 0 ? null : selection.getRangeAt(0);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.2\", ngImport: i0, type: EditorInputComponent, deps: [{ token: i0.ElementRef }, { token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.2\", type: EditorInputComponent, selector: \"st-input\", inputs: { button: \"button\", state: \"state\" }, outputs: { command: \"command\" }, host: { listeners: { \"document:click\": \"outsideClick($event)\" } }, viewQueries: [{ propertyName: \"inputElement\", first: true, predicate: [\"input\"], descendants: true }, { propertyName: \"windowElement\", first: true, predicate: [\"window\"], descendants: true }], ngImport: i0, template: \"<st-button [button]=\\\"button\\\" [state]=\\\"state\\\" (command)=\\\"openInputWindow()\\\"></st-button>\\n<div *ngIf=\\\"showInputWindow\\\" #window class=\\\"st-input-window\\\" (keyup.escape)=\\\"closeInputWindow()\\\" [style.margin-left.px]=\\\"margin\\\" [style.opacity]=\\\"opacity\\\">\\n  <label *ngIf=\\\"button?.label\\\" class=\\\"st-input-label\\\">{{button?.label}}</label>\\n  <div>\\n    <input #input class=\\\"st-input-input\\\" type=\\\"text\\\" [title]=\\\"button?.label\\\" [(ngModel)]=\\\"value\\\">\\n    <button class=\\\"st-input-button\\\" (click)=\\\"onCommand()\\\">Confirm</button>\\n  </div>\\n</div>\\n\", styles: [\".st-toolbar-item,.st-input-button{border:0;padding:8px 14px;background-color:#fff;border-radius:5px;margin-right:1px;cursor:pointer}.st-toolbar-item:hover,.st-input-button:hover{background-color:#e0e0e0}.st-toolbar-item:focus,.st-input-button:focus{outline-color:#424242}.st-input-window{display:flex;flex-direction:column;background-color:#fff;position:absolute;padding:10px;top:5px;border:1px solid #bdbdbd;border-radius:5px;box-shadow:0 3px 7px #bdbdbd}.st-input-input{padding:8px 14px;background-color:#fff;margin-right:-1px;border:1px solid #bdbdbd;border-bottom-left-radius:5px;border-top-left-radius:5px}.st-input-button{margin-right:0;border-bottom-left-radius:0;border-top-left-radius:0;border:1px solid #bdbdbd}.st-input-label{font-size:14px;font-weight:700}\\n\"], dependencies: [{ kind: \"directive\", type: i2$1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i2.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { kind: \"directive\", type: i2.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { kind: \"directive\", type: i2.NgModel, selector: \"[ngModel]:not([formControlName]):not([formControl])\", inputs: [\"name\", \"disabled\", \"ngModel\", \"ngModelOptions\"], outputs: [\"ngModelChange\"], exportAs: [\"ngModel\"] }, { kind: \"component\", type: EditorButtonComponent, selector: \"st-button\", inputs: [\"button\", \"state\"], outputs: [\"command\"] }] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.2\", ngImport: i0, type: EditorInputComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'st-input', template: \"<st-button [button]=\\\"button\\\" [state]=\\\"state\\\" (command)=\\\"openInputWindow()\\\"></st-button>\\n<div *ngIf=\\\"showInputWindow\\\" #window class=\\\"st-input-window\\\" (keyup.escape)=\\\"closeInputWindow()\\\" [style.margin-left.px]=\\\"margin\\\" [style.opacity]=\\\"opacity\\\">\\n  <label *ngIf=\\\"button?.label\\\" class=\\\"st-input-label\\\">{{button?.label}}</label>\\n  <div>\\n    <input #input class=\\\"st-input-input\\\" type=\\\"text\\\" [title]=\\\"button?.label\\\" [(ngModel)]=\\\"value\\\">\\n    <button class=\\\"st-input-button\\\" (click)=\\\"onCommand()\\\">Confirm</button>\\n  </div>\\n</div>\\n\", styles: [\".st-toolbar-item,.st-input-button{border:0;padding:8px 14px;background-color:#fff;border-radius:5px;margin-right:1px;cursor:pointer}.st-toolbar-item:hover,.st-input-button:hover{background-color:#e0e0e0}.st-toolbar-item:focus,.st-input-button:focus{outline-color:#424242}.st-input-window{display:flex;flex-direction:column;background-color:#fff;position:absolute;padding:10px;top:5px;border:1px solid #bdbdbd;border-radius:5px;box-shadow:0 3px 7px #bdbdbd}.st-input-input{padding:8px 14px;background-color:#fff;margin-right:-1px;border:1px solid #bdbdbd;border-bottom-left-radius:5px;border-top-left-radius:5px}.st-input-button{margin-right:0;border-bottom-left-radius:0;border-top-left-radius:0;border:1px solid #bdbdbd}.st-input-label{font-size:14px;font-weight:700}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }]; }, propDecorators: { button: [{\n                type: Input\n            }], state: [{\n                type: Input\n            }], command: [{\n                type: Output\n            }], inputElement: [{\n                type: ViewChild,\n                args: ['input', { static: false }]\n            }], windowElement: [{\n                type: ViewChild,\n                args: ['window', { static: false }]\n            }], outsideClick: [{\n                type: HostListener,\n                args: ['document:click', ['$event']]\n            }] } });\n\nclass EditorSelectComponent {\n    constructor() {\n        this.command = new EventEmitter();\n    }\n    ngOnInit() {\n        if (!this.state && this.button.items.length) {\n            this.state = this.button.items[0].value;\n        }\n    }\n    onCommand(command, value) {\n        this.command.emit({ command, value });\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.2\", ngImport: i0, type: EditorSelectComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.2\", type: EditorSelectComponent, selector: \"st-select\", inputs: { button: \"button\", state: \"state\" }, outputs: { command: \"command\" }, ngImport: i0, template: \"<select [ngModel]=\\\"state\\\" [title]=\\\"button?.title || ''\\\" (ngModelChange)=\\\"onCommand(button?.command, $event)\\\" class=\\\"st-select st-toolbar-item\\\">\\n  <option *ngFor=\\\"let i of button?.items\\\" [value]=\\\"i.value\\\">{{i.label}}</option>\\n</select>\\n\", styles: [\".st-toolbar-item{border:0;padding:8px 14px;background-color:#fff;border-radius:5px;margin-right:1px;cursor:pointer}.st-toolbar-item:hover{background-color:#e0e0e0}.st-toolbar-item:focus{outline-color:#424242}option:checked{background-color:#424242;color:#fff}\\n\"], dependencies: [{ kind: \"directive\", type: i2$1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i2.NgSelectOption, selector: \"option\", inputs: [\"ngValue\", \"value\"] }, { kind: \"directive\", type: i2.ɵNgSelectMultipleOption, selector: \"option\", inputs: [\"ngValue\", \"value\"] }, { kind: \"directive\", type: i2.SelectControlValueAccessor, selector: \"select:not([multiple])[formControlName],select:not([multiple])[formControl],select:not([multiple])[ngModel]\", inputs: [\"compareWith\"] }, { kind: \"directive\", type: i2.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { kind: \"directive\", type: i2.NgModel, selector: \"[ngModel]:not([formControlName]):not([formControl])\", inputs: [\"name\", \"disabled\", \"ngModel\", \"ngModelOptions\"], outputs: [\"ngModelChange\"], exportAs: [\"ngModel\"] }] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.2\", ngImport: i0, type: EditorSelectComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'st-select', template: \"<select [ngModel]=\\\"state\\\" [title]=\\\"button?.title || ''\\\" (ngModelChange)=\\\"onCommand(button?.command, $event)\\\" class=\\\"st-select st-toolbar-item\\\">\\n  <option *ngFor=\\\"let i of button?.items\\\" [value]=\\\"i.value\\\">{{i.label}}</option>\\n</select>\\n\", styles: [\".st-toolbar-item{border:0;padding:8px 14px;background-color:#fff;border-radius:5px;margin-right:1px;cursor:pointer}.st-toolbar-item:hover{background-color:#e0e0e0}.st-toolbar-item:focus{outline-color:#424242}option:checked{background-color:#424242;color:#fff}\\n\"] }]\n        }], propDecorators: { button: [{\n                type: Input\n            }], state: [{\n                type: Input\n            }], command: [{\n                type: Output\n            }] } });\n\nclass EditorSeparatorComponent {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.2\", ngImport: i0, type: EditorSeparatorComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.2\", type: EditorSeparatorComponent, selector: \"st-separator\", ngImport: i0, template: \"<div class=\\\"st-divider\\\">&nbsp;</div>\\n\", styles: [\".st-toolbar-item{border:0;padding:8px 14px;background-color:#fff;border-radius:5px;margin-right:1px;cursor:pointer}.st-toolbar-item:hover{background-color:#e0e0e0}.st-toolbar-item:focus{outline-color:#424242}.st-divider{border-right:1px solid #bdbdbd;margin:0 5px 0 0;height:25px}\\n\"] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.2\", ngImport: i0, type: EditorSeparatorComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'st-separator', template: \"<div class=\\\"st-divider\\\">&nbsp;</div>\\n\", styles: [\".st-toolbar-item{border:0;padding:8px 14px;background-color:#fff;border-radius:5px;margin-right:1px;cursor:pointer}.st-toolbar-item:hover{background-color:#e0e0e0}.st-toolbar-item:focus{outline-color:#424242}.st-divider{border-right:1px solid #bdbdbd;margin:0 5px 0 0;height:25px}\\n\"] }]\n        }] });\n\nconst MUTATION_OBSERVER_CONFIG = {\n    attributes: true,\n    childList: true,\n    subtree: true,\n    characterData: true\n};\nclass DomModifyDirective {\n    constructor(element) {\n        this.element = element;\n        this.domModify = new EventEmitter();\n    }\n    ngOnInit() {\n        this.observer = new MutationObserver(() => {\n            this.domModify.emit();\n        });\n        this.observer.observe(this.element.nativeElement, MUTATION_OBSERVER_CONFIG);\n    }\n    ngOnDestroy() {\n        this.observer.disconnect();\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.2\", ngImport: i0, type: DomModifyDirective, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.2.2\", type: DomModifyDirective, selector: \"[stDomModify]\", outputs: { domModify: \"stDomModify\" }, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.2\", ngImport: i0, type: DomModifyDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[stDomModify]'\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; }, propDecorators: { domModify: [{\n                type: Output,\n                args: ['stDomModify']\n            }] } });\n\nclass SelectionChangeDirective {\n    constructor(document, element) {\n        this.document = document;\n        this.element = element;\n        this.selectionChange = new EventEmitter();\n    }\n    selectionchange() {\n        if (this.document.activeElement === this.element.nativeElement) {\n            this.selectionChange.emit();\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.2\", ngImport: i0, type: SelectionChangeDirective, deps: [{ token: DOCUMENT }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.2.2\", type: SelectionChangeDirective, selector: \"[stSelectionChange]\", outputs: { selectionChange: \"stSelectionChange\" }, host: { listeners: { \"document:selectionchange\": \"selectionchange()\" } }, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.2\", ngImport: i0, type: SelectionChangeDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[stSelectionChange]'\n                }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: i0.ElementRef }]; }, propDecorators: { selectionChange: [{\n                type: Output,\n                args: ['stSelectionChange']\n            }], selectionchange: [{\n                type: HostListener,\n                args: ['document:selectionchange']\n            }] } });\n\nclass EditorDropdownComponent {\n    constructor() {\n        this.label = '';\n        this.command = new EventEmitter();\n    }\n    set button(val) {\n        this.label = val.label;\n        if (this.width) {\n            this._button = val;\n        }\n        else {\n            this._tempButton = val;\n        }\n    }\n    get button() {\n        return this._button;\n    }\n    ngAfterViewInit() {\n        setTimeout(() => {\n            this.width = this.selectElement.nativeElement.getBoundingClientRect().width;\n            this._button = this._tempButton;\n        });\n    }\n    onCommand({ value: label }) {\n        const { command, value } = this.button.items.find(item => item.label === label);\n        this.command.emit({ command, value });\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.2\", ngImport: i0, type: EditorDropdownComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.2\", type: EditorDropdownComponent, selector: \"st-dropdown\", inputs: { button: \"button\" }, outputs: { command: \"command\" }, viewQueries: [{ propertyName: \"selectElement\", first: true, predicate: [\"select\"], descendants: true }], ngImport: i0, template: \"<select #select [title]=\\\"button?.title || ''\\\" (change)=\\\"onCommand($event.target); select.value = ''\\\" class=\\\"st-select st-toolbar-item\\\" [style.width.px]=\\\"this.width\\\">\\n  <option value=\\\"\\\" disabled selected hidden>{{label}}</option>\\n  <option *ngFor=\\\"let i of button?.items\\\" [value]=\\\"i.label\\\">{{i.label}}</option>\\n</select>\\n\", styles: [\".st-toolbar-item{border:0;padding:8px 14px;background-color:#fff;border-radius:5px;margin-right:1px;cursor:pointer}.st-toolbar-item:hover{background-color:#e0e0e0}.st-toolbar-item:focus{outline-color:#424242}\\n\"], dependencies: [{ kind: \"directive\", type: i2$1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i2.NgSelectOption, selector: \"option\", inputs: [\"ngValue\", \"value\"] }, { kind: \"directive\", type: i2.ɵNgSelectMultipleOption, selector: \"option\", inputs: [\"ngValue\", \"value\"] }] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.2\", ngImport: i0, type: EditorDropdownComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'st-dropdown', template: \"<select #select [title]=\\\"button?.title || ''\\\" (change)=\\\"onCommand($event.target); select.value = ''\\\" class=\\\"st-select st-toolbar-item\\\" [style.width.px]=\\\"this.width\\\">\\n  <option value=\\\"\\\" disabled selected hidden>{{label}}</option>\\n  <option *ngFor=\\\"let i of button?.items\\\" [value]=\\\"i.label\\\">{{i.label}}</option>\\n</select>\\n\", styles: [\".st-toolbar-item{border:0;padding:8px 14px;background-color:#fff;border-radius:5px;margin-right:1px;cursor:pointer}.st-toolbar-item:hover{background-color:#e0e0e0}.st-toolbar-item:focus{outline-color:#424242}\\n\"] }]\n        }], propDecorators: { selectElement: [{\n                type: ViewChild,\n                args: ['select']\n            }], button: [{\n                type: Input\n            }], command: [{\n                type: Output\n            }] } });\n\nconst DEFAULT_CONFIG = {\n    placeholder: '',\n    buttons: ST_BUTTONS,\n};\nclass EditorComponent {\n    set config(val) {\n        this._config = { ...DEFAULT_CONFIG, ...val };\n    }\n    get config() {\n        return this._config;\n    }\n    constructor(document, commandService) {\n        this.document = document;\n        this.commandService = commandService;\n        this._config = DEFAULT_CONFIG;\n        this.content = '';\n        this.toolbarItemType = ToolbarItemType;\n        this.isDisabled = false;\n        this.queryCommandState = {};\n    }\n    ngAfterViewInit() {\n        this.updateContentEditable();\n    }\n    writeValue(val) {\n        this.content = val;\n        this.updateContentEditable();\n    }\n    registerOnChange(fn) {\n        this.onChangeFn = fn;\n    }\n    registerOnTouched(fn) {\n        this.onTouchedFn = fn;\n    }\n    setDisabledState(isDisabled) {\n        this.isDisabled = isDisabled;\n    }\n    domModify() {\n        if (this.contentEditable) {\n            this.onChangeFn(this.contentEditable.nativeElement.innerHTML);\n        }\n    }\n    execCommand(command, value) {\n        this.contentEditable.nativeElement.focus();\n        this.commandService.execCommand(command, value);\n        this.fetchQueryCommandState();\n    }\n    fetchQueryCommandState() {\n        this.queryCommandState = this.commandService.getQueryCommandState(this.config.buttons);\n    }\n    trackBy(_, item) {\n        return item.name;\n    }\n    updateContentEditable() {\n        if (this.contentEditable) {\n            this.contentEditable.nativeElement.innerHTML = this.content;\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.2\", ngImport: i0, type: EditorComponent, deps: [{ token: DOCUMENT }, { token: CommandService }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.2\", type: EditorComponent, selector: \"st-editor\", inputs: { config: \"config\" }, providers: [\n            { provide: NG_VALUE_ACCESSOR, useExisting: EditorComponent, multi: true },\n            CommandService\n        ], viewQueries: [{ propertyName: \"contentEditable\", first: true, predicate: [\"contentEditable\"], descendants: true }], ngImport: i0, template: \"<div class=\\\"st-editor-container\\\" [class.disabled]=\\\"isDisabled\\\">\\n  <div class=\\\"st-toolbar\\\" tabIndex=\\\"0\\\">\\n    <ng-container *ngFor=\\\"let item of config.buttons; trackBy:trackBy\\\" [ngSwitch]=\\\"item.type\\\">\\n      <st-separator *ngSwitchCase=\\\"toolbarItemType.Separator\\\"></st-separator>\\n      <st-button *ngIf=\\\"item.type === toolbarItemType.Button\\\"\\n                                 [button]=\\\"item\\\" [state]=\\\"queryCommandState[item.command]\\\"\\n                                 (command)=\\\"execCommand($event)\\\">\\n      </st-button>\\n      <st-select *ngSwitchCase=\\\"toolbarItemType.Select\\\"\\n                         [button]=\\\"item\\\" [state]=\\\"queryCommandState[item.command]\\\"\\n                         (command)=\\\"execCommand($event.command, $event.value)\\\">\\n      </st-select>\\n      <st-color-picker *ngSwitchCase=\\\"toolbarItemType.Color\\\"\\n                               [button]=\\\"item\\\" [state]=\\\"queryCommandState[item.command]\\\"\\n                               (command)=\\\"execCommand($event.command, $event.value)\\\">\\n      </st-color-picker>\\n      <st-input *ngSwitchCase=\\\"toolbarItemType.Input\\\"\\n                        [button]=\\\"item\\\"\\n                        (command)=\\\"execCommand($event.command, $event.value)\\\">\\n      </st-input>\\n      <st-dropdown *ngSwitchCase=\\\"toolbarItemType.Dropdown\\\"\\n                [button]=\\\"item\\\"\\n                (command)=\\\"execCommand($event.command, $event.value)\\\">\\n      </st-dropdown>\\n    </ng-container>\\n  </div>\\n  <div #contentEditable class=\\\"st-area\\\"\\n       [attr.data-placeholder]=\\\"config.placeholder\\\" [attr.contenteditable]=\\\"!isDisabled\\\"\\n       (stDomModify)=\\\"domModify()\\\" (stSelectionChange)=\\\"fetchQueryCommandState()\\\" (blur)=\\\"onTouchedFn()\\\"></div>\\n</div>\\n\", styles: [\".st-toolbar-item{border:0;padding:8px 14px;background-color:#fff;border-radius:5px;margin-right:1px;cursor:pointer}.st-toolbar-item:hover{background-color:#e0e0e0}.st-toolbar-item:focus{outline-color:#424242}.st-editor-container{position:relative}.st-editor-container.disabled{pointer-events:none;opacity:.5}.st-area{resize:vertical;overflow:auto;border:1px solid #bdbdbd;border-top:0;border-bottom-left-radius:5px;border-bottom-right-radius:5px;min-height:200px;padding:5px;background-color:#fff}.st-area:focus{outline-color:#424242}.st-area:empty:not(:focus):before{content:attr(data-placeholder);color:#bdbdbd;pointer-events:none}.st-toolbar{border-top-right-radius:5px;border-top-left-radius:5px;display:flex;flex-wrap:wrap;align-items:center;border:1px solid #bdbdbd;padding:5px;background-color:#fff}.st-toolbar:focus{outline-color:#424242}\\n\"], dependencies: [{ kind: \"directive\", type: i2$1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i2$1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i2$1.NgSwitch, selector: \"[ngSwitch]\", inputs: [\"ngSwitch\"] }, { kind: \"directive\", type: i2$1.NgSwitchCase, selector: \"[ngSwitchCase]\", inputs: [\"ngSwitchCase\"] }, { kind: \"component\", type: EditorButtonComponent, selector: \"st-button\", inputs: [\"button\", \"state\"], outputs: [\"command\"] }, { kind: \"component\", type: EditorColorPickerComponent, selector: \"st-color-picker\", inputs: [\"button\", \"state\"], outputs: [\"command\"] }, { kind: \"component\", type: EditorInputComponent, selector: \"st-input\", inputs: [\"button\", \"state\"], outputs: [\"command\"] }, { kind: \"component\", type: EditorSelectComponent, selector: \"st-select\", inputs: [\"button\", \"state\"], outputs: [\"command\"] }, { kind: \"component\", type: EditorSeparatorComponent, selector: \"st-separator\" }, { kind: \"directive\", type: DomModifyDirective, selector: \"[stDomModify]\", outputs: [\"stDomModify\"] }, { kind: \"directive\", type: SelectionChangeDirective, selector: \"[stSelectionChange]\", outputs: [\"stSelectionChange\"] }, { kind: \"component\", type: EditorDropdownComponent, selector: \"st-dropdown\", inputs: [\"button\"], outputs: [\"command\"] }] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.2\", ngImport: i0, type: EditorComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'st-editor', providers: [\n                        { provide: NG_VALUE_ACCESSOR, useExisting: EditorComponent, multi: true },\n                        CommandService\n                    ], template: \"<div class=\\\"st-editor-container\\\" [class.disabled]=\\\"isDisabled\\\">\\n  <div class=\\\"st-toolbar\\\" tabIndex=\\\"0\\\">\\n    <ng-container *ngFor=\\\"let item of config.buttons; trackBy:trackBy\\\" [ngSwitch]=\\\"item.type\\\">\\n      <st-separator *ngSwitchCase=\\\"toolbarItemType.Separator\\\"></st-separator>\\n      <st-button *ngIf=\\\"item.type === toolbarItemType.Button\\\"\\n                                 [button]=\\\"item\\\" [state]=\\\"queryCommandState[item.command]\\\"\\n                                 (command)=\\\"execCommand($event)\\\">\\n      </st-button>\\n      <st-select *ngSwitchCase=\\\"toolbarItemType.Select\\\"\\n                         [button]=\\\"item\\\" [state]=\\\"queryCommandState[item.command]\\\"\\n                         (command)=\\\"execCommand($event.command, $event.value)\\\">\\n      </st-select>\\n      <st-color-picker *ngSwitchCase=\\\"toolbarItemType.Color\\\"\\n                               [button]=\\\"item\\\" [state]=\\\"queryCommandState[item.command]\\\"\\n                               (command)=\\\"execCommand($event.command, $event.value)\\\">\\n      </st-color-picker>\\n      <st-input *ngSwitchCase=\\\"toolbarItemType.Input\\\"\\n                        [button]=\\\"item\\\"\\n                        (command)=\\\"execCommand($event.command, $event.value)\\\">\\n      </st-input>\\n      <st-dropdown *ngSwitchCase=\\\"toolbarItemType.Dropdown\\\"\\n                [button]=\\\"item\\\"\\n                (command)=\\\"execCommand($event.command, $event.value)\\\">\\n      </st-dropdown>\\n    </ng-container>\\n  </div>\\n  <div #contentEditable class=\\\"st-area\\\"\\n       [attr.data-placeholder]=\\\"config.placeholder\\\" [attr.contenteditable]=\\\"!isDisabled\\\"\\n       (stDomModify)=\\\"domModify()\\\" (stSelectionChange)=\\\"fetchQueryCommandState()\\\" (blur)=\\\"onTouchedFn()\\\"></div>\\n</div>\\n\", styles: [\".st-toolbar-item{border:0;padding:8px 14px;background-color:#fff;border-radius:5px;margin-right:1px;cursor:pointer}.st-toolbar-item:hover{background-color:#e0e0e0}.st-toolbar-item:focus{outline-color:#424242}.st-editor-container{position:relative}.st-editor-container.disabled{pointer-events:none;opacity:.5}.st-area{resize:vertical;overflow:auto;border:1px solid #bdbdbd;border-top:0;border-bottom-left-radius:5px;border-bottom-right-radius:5px;min-height:200px;padding:5px;background-color:#fff}.st-area:focus{outline-color:#424242}.st-area:empty:not(:focus):before{content:attr(data-placeholder);color:#bdbdbd;pointer-events:none}.st-toolbar{border-top-right-radius:5px;border-top-left-radius:5px;display:flex;flex-wrap:wrap;align-items:center;border:1px solid #bdbdbd;padding:5px;background-color:#fff}.st-toolbar:focus{outline-color:#424242}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: CommandService }]; }, propDecorators: { config: [{\n                type: Input\n            }], contentEditable: [{\n                type: ViewChild,\n                args: ['contentEditable']\n            }] } });\n\nclass NgxSimpleTextEditorModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.2\", ngImport: i0, type: NgxSimpleTextEditorModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.2.2\", ngImport: i0, type: NgxSimpleTextEditorModule, declarations: [EditorComponent,\n            EditorButtonComponent,\n            EditorColorPickerComponent,\n            EditorInputComponent,\n            EditorSelectComponent,\n            EditorSeparatorComponent,\n            DomModifyDirective,\n            SelectionChangeDirective,\n            EditorDropdownComponent], imports: [CommonModule,\n            FormsModule,\n            ReactiveFormsModule], exports: [EditorComponent,\n            EditorButtonComponent,\n            EditorColorPickerComponent,\n            EditorInputComponent,\n            EditorSelectComponent,\n            EditorSeparatorComponent,\n            EditorDropdownComponent] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.2.2\", ngImport: i0, type: NgxSimpleTextEditorModule, imports: [CommonModule,\n            FormsModule,\n            ReactiveFormsModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.2\", ngImport: i0, type: NgxSimpleTextEditorModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [\n                        EditorComponent,\n                        EditorButtonComponent,\n                        EditorColorPickerComponent,\n                        EditorInputComponent,\n                        EditorSelectComponent,\n                        EditorSeparatorComponent,\n                        DomModifyDirective,\n                        SelectionChangeDirective,\n                        EditorDropdownComponent,\n                    ],\n                    imports: [\n                        CommonModule,\n                        FormsModule,\n                        ReactiveFormsModule,\n                    ],\n                    exports: [\n                        EditorComponent,\n                        EditorButtonComponent,\n                        EditorColorPickerComponent,\n                        EditorInputComponent,\n                        EditorSelectComponent,\n                        EditorSeparatorComponent,\n                        EditorDropdownComponent,\n                    ]\n                }]\n        }] });\n\n/*\n * Public API Surface of ngx-simple-text-editor\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BOLD_BUTTON, CUSTOM, EditorButtonComponent, EditorColorPickerComponent, EditorComponent, EditorDropdownComponent, EditorInputComponent, EditorSelectComponent, EditorSeparatorComponent, FONT_SIZE_SELECT, FORE_COLOR, IMAGE_INPUT, INDENT_BUTTON, ITALIC_BUTTON, JUSTIFY_CENTER_BUTTON, JUSTIFY_FULL_BUTTON, JUSTIFY_LEFT_BUTTON, JUSTIFY_RIGHT_BUTTON, LINK_INPUT, NgxSimpleTextEditorModule, ORDERED_LIST_BUTTON, OUTDENT_BUTTON, REDO_BUTTON, REMOVE_FORMAT_BUTTON, SEPARATOR, STRIKE_THROUGH_BUTTON, ST_BUTTONS, SUBSCRIPT_BUTTON, SUPERSCRIPT_BUTTON, ToolbarItemType, UNDERLINE_BUTTON, UNDO_BUTTON, UNLINK_BUTTON, UNORDERED_LIST_BUTTON };\n","<div *ngIf=\"data && data['hydra:member'] && data['hydra:totalItems'] > 0\">\n  <table class=\"table table-bordered\" role=\"table\">\n    <thead>\n      <tr class=\"table-row text-center\" role=\"rowgroup\">\n        <th *ngFor=\"let head of getArrayFieldsFromJSON(data['hydra:member'][0])\" role=\"columnheader\" scope=\"col\">\n          {{ head | translate }}\n        </th>\n        <th role=\"columnheader\" scope=\"col\">{{ 'ACTIONS' | translate }}</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let row of data['hydra:member']\" class=\"table-body table-row text-center\" role=\"rowgroup\">\n        <td *ngFor=\"let column of getArrayDataFromJSON(row)\" role=\"cell\">\n          {{ column }}\n        </td>\n        <td role=\"cell\">\n          <button class=\"btn p-0\" [routerLink]=\"['/admin/edit/', currentType, row.id]\">\n            <img\n              src=\"https://material-icons.github.io/material-icons/svg/edit/baseline.svg\"\n              alt=\"{{ 'EDIT' | translate }}\"\n              title=\"{{ 'EDIT' | translate }}\"\n              class=\"d-inline-block align-top\"\n            />\n          </button>\n          <button class=\"btn ms-2 p-0\" (click)=\"deleteByID(row.id)\">\n            <img\n              src=\"https://material-icons.github.io/material-icons/svg/delete/baseline.svg\"\n              alt=\"{{ 'DELETE' | translate }}\"\n              title=\"{{ 'DELETE' | translate }}\"\n              class=\"d-inline-block align-top\"\n            />\n          </button>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n  <p>{{ 'TOTAL_ITEMS' | translate }}: {{ data['hydra:totalItems'] }}</p>\n  <!--todo: paginator component-->\n  <!--\n  <nav aria-label=\"Page navigation example\">\n    <ul class=\"pagination\">\n      <li class=\"page-item\"><a class=\"page-link\" href=\"#\">Previous</a></li>\n      <li class=\"page-item\"><a class=\"page-link\" href=\"#\">1</a></li>\n      <li class=\"page-item\"><a class=\"page-link\" href=\"#\">2</a></li>\n      <li class=\"page-item\"><a class=\"page-link\" href=\"#\">Next</a></li>\n    </ul>\n  </nav>\n  -->\n</div>\n","import { Component, Input } from '@angular/core';\nimport { environment } from '../../../../../environments/environment';\nimport { HttpClient } from '@angular/common/http';\nimport { ToastrService } from 'ngx-toastr';\nimport { TranslateService } from '@ngx-translate/core';\nimport { catchError } from 'rxjs/operators';\nimport { throwError } from 'rxjs';\n\n@Component({\n  selector: 'app-table',\n  templateUrl: './table.component.html',\n  styleUrls: ['./table.component.sass'],\n})\nexport class TableComponent {\n  @Input() data: Object;\n  @Input() currentType: string;\n  fields: any;\n\n  constructor(\n    private http: HttpClient,\n    private toaster: ToastrService,\n    private translateService: TranslateService,\n  ) {}\n\n  getArrayDataFromJSON(json) {\n    let data = [];\n    for (let field of this.fields) {\n      data.push(json[field]);\n    }\n    return data;\n  }\n\n  getArrayFieldsFromJSON(json = []) {\n    this.fields = this.internalFieldsFilter(Object.keys(json));\n\n    return this.fields;\n  }\n\n  internalFieldsFilter(array: any[]) {\n    const fieldsToRemoveFromResponse = ['@id', '@type'];\n\n    return array.filter((value) => fieldsToRemoveFromResponse.indexOf(value) < 0);\n  }\n\n  deleteByID(id: number) {\n    return this.http\n      .delete(environment.apiUrl + '/' + this.currentType + '/' + id, { observe: 'response' })\n      .pipe(\n        catchError((err) => {\n          this.toaster.error(err.error.error);\n          return throwError(err);\n        }),\n      )\n      .subscribe(() => {\n        this.toaster.success(this.translateService.instant('DELETED'));\n        const deleted = this.data['hydra:member'].find((x) => x.id === id);\n        this.data['hydra:member'].splice(this.data['hydra:member'].indexOf(deleted), 1);\n        this.data['hydra:totalItems'] -= 1;\n      });\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { SubjectService } from '../../../../services/subject.service';\nimport { UnitService } from '../../../../services/unit.service';\nimport { ExerciseService } from '../../../../services/exercise.service';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-admin',\n  templateUrl: './admin.component.html',\n})\nexport class AdminComponent implements OnInit {\n  //page: number = 1;\n\n  currentTab: string;\n  currentService: SubjectService | UnitService | ExerciseService;\n\n  subjects$: Observable<any>;\n  units$: Observable<any>;\n  exercises$: Observable<any>;\n\n  constructor(\n    public subjectService: SubjectService,\n    public unitService: UnitService,\n    public exerciseService: ExerciseService,\n  ) {}\n\n  ngOnInit(): void {\n    //Load all items: (prefetch all)\n    this.subjects$ = this.subjectService.get(/*{page: this.page}*/);\n    this.units$ = this.unitService.get(/*{page: this.page}*/);\n    this.exercises$ = this.exerciseService.get(/*{page: this.page}*/);\n\n    //Set default tab and service:\n    this.currentTab = 'subjects';\n    this.currentService = this.subjectService;\n  }\n\n  setCurrentNav(event) {\n    this.currentTab = event.target.id;\n  }\n\n  setCurrentData() {\n    switch (this.currentTab) {\n      case 'subjects':\n        this.currentService = this.subjectService;\n        this.subjects$ = this.subjectService.get(/*{page: this.page}*/);\n        break;\n      case 'units':\n        this.currentService = this.unitService;\n        this.units$ = this.unitService.get(/*{page: this.page}*/);\n        break;\n      case 'exercises':\n        this.currentService = this.exerciseService;\n        this.exercises$ = this.exerciseService.get(/*{page: this.page}*/);\n        break;\n    }\n  }\n}\n","<ul class=\"nav nav-tabs\" role=\"tablist\">\n  <li class=\"nav-item\" role=\"presentation\">\n    <button\n      (click)=\"setCurrentNav($event)\"\n      class=\"nav-link active\"\n      id=\"subjects\"\n      data-bs-toggle=\"tab\"\n      data-bs-target=\"#nav-subjects\"\n      type=\"button\"\n      role=\"tab\"\n      aria-controls=\"nav-subjects\"\n      aria-selected=\"true\"\n    >\n      {{ 'SUBJECTS' | translate }}\n    </button>\n  </li>\n  <li class=\"nav-item\" role=\"presentation\">\n    <button\n      (click)=\"setCurrentNav($event)\"\n      class=\"nav-link\"\n      id=\"units\"\n      data-bs-toggle=\"tab\"\n      data-bs-target=\"#nav-units\"\n      type=\"button\"\n      role=\"tab\"\n      aria-controls=\"nav-units\"\n      aria-selected=\"false\"\n    >\n      {{ 'UNITS' | translate }}\n    </button>\n  </li>\n  <li class=\"nav-item\" role=\"presentation\">\n    <button\n      (click)=\"setCurrentNav($event)\"\n      class=\"nav-link\"\n      id=\"exercises\"\n      data-bs-toggle=\"tab\"\n      data-bs-target=\"#nav-exercises\"\n      type=\"button\"\n      role=\"tab\"\n      aria-controls=\"nav-exercises\"\n      aria-selected=\"false\"\n    >\n      {{ 'EXERCISES' | translate }}\n    </button>\n  </li>\n  <li class=\"nav-item\" role=\"presentation\">\n    <button [routerLink]=\"['/admin/new/', currentTab]\" class=\"nav-link\" type=\"button\" role=\"button\" aria-selected=\"false\">\n      <img\n        src=\"https://material-icons.github.io/material-icons/svg/add/baseline.svg\"\n        alt=\"{{ 'ADD' | translate }}\"\n        title=\"{{ 'ADD' | translate }}\"\n        class=\"d-inline-block align-top\"\n      />\n    </button>\n  </li>\n</ul>\n<div class=\"tab-content\">\n  <div class=\"tab-pane fade show active\" id=\"nav-subjects\" role=\"tabpanel\" aria-labelledby=\"subjects\">\n    <app-table [currentType]=\"currentTab\" [data]=\"subjects$ | async\"></app-table>\n  </div>\n  <div class=\"tab-pane fade\" id=\"nav-units\" role=\"tabpanel\" aria-labelledby=\"units\">\n    <app-table [currentType]=\"currentTab\" [data]=\"units$ | async\"></app-table>\n  </div>\n  <div class=\"tab-pane fade\" id=\"nav-exercises\" role=\"tabpanel\" aria-labelledby=\"exercises\">\n    <app-table [currentType]=\"currentTab\" [data]=\"exercises$ | async\"></app-table>\n  </div>\n</div>\n","export default class Utils {\n  /**\n   * Filter the response form the API for get only the useful fields:\n   * @param array\n   */\n  static internalFieldsFilter(array) {\n    const fieldsToRemoveFromResponse = ['@id', '@type', '@context'];\n\n    return array.filter((value) => fieldsToRemoveFromResponse.indexOf(value) < 0);\n  }\n}\n","<form class=\"mb-3\" [formGroup]=\"form\">\n  <div *ngFor=\"let field of fields; let i = index\" class=\"mt-2\">\n    <label [for]=\"field\" class=\"form-label\" role=\"button\">{{ field | translate }}</label>\n    <input *ngIf=\"field !== 'text'\" type=\"text\" class=\"form-control\" [id]=\"field\" [formControl]=\"formControlsArray[i]\" />\n    <!--todo question improvement for show false or true / text-->\n    <st-editor *ngIf=\"item === 'units' && field === 'text'\" [formControl]=\"formControlsArray[i]\" [config]=\"config\"></st-editor>\n  </div>\n  <div class=\"form-actions mt-3 text-center\">\n    <button type=\"submit\" class=\"btn btn-outline-primary me-3\" (click)=\"submit()\">{{ 'SAVE' | translate }}</button>\n    <button (click)=\"backClicked()\" class=\"btn btn-outline\">{{ 'GO_BACK' | translate }}</button>\n  </div>\n</form>\n","import { Component, OnInit } from '@angular/core';\nimport { Location } from '@angular/common';\nimport { ActivatedRoute } from '@angular/router';\nimport { UntypedFormBuilder, UntypedFormGroup, Validators } from '@angular/forms';\nimport { TranslateService } from '@ngx-translate/core';\nimport { EditorConfig, UNDO_BUTTON, SEPARATOR, BOLD_BUTTON, ITALIC_BUTTON } from 'ngx-simple-text-editor';\nimport { ToastrService } from 'ngx-toastr';\nimport { throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { SubjectService } from '../../../../services/subject.service';\nimport { UnitService } from '../../../../services/unit.service';\nimport { ExerciseService } from '../../../../services/exercise.service';\nimport Utils from '../../../../utils';\n\n@Component({\n  selector: 'app-new-item',\n  templateUrl: './edit-item.component.html',\n})\nexport class EditItemComponent implements OnInit {\n  id: number;\n  item: string;\n  currentService: SubjectService | UnitService | ExerciseService;\n  fields: any;\n  data: Object;\n  htmlContent = '';\n\n  config: EditorConfig = {\n    buttons: [UNDO_BUTTON, SEPARATOR, BOLD_BUTTON, ITALIC_BUTTON],\n  };\n\n  form: UntypedFormGroup;\n  formControlsArray = [];\n\n  constructor(\n    public route: ActivatedRoute,\n    public subjectService: SubjectService,\n    public unitService: UnitService,\n    public exerciseService: ExerciseService,\n    private _formBuilder: UntypedFormBuilder,\n    private toaster: ToastrService,\n    private translateService: TranslateService,\n    private _location: Location,\n  ) {\n    this.form = this._formBuilder.group({\n      formControlsArray: this._formBuilder.array([]),\n    });\n  }\n\n  ngOnInit(): void {\n    this.route.paramMap.subscribe((params) => {\n      this.item = params.get('item');\n      switch (this.item) {\n        case 'subjects':\n          this.currentService = this.subjectService;\n          break;\n        case 'units':\n          this.currentService = this.unitService;\n          break;\n        case 'exercises':\n          this.currentService = this.exerciseService;\n          break;\n      }\n\n      if (params.get('id')) {\n        this.id = parseInt(params.get('id'));\n      }\n\n      this.currentService.getOne(this.id).subscribe((details) => {\n        this.data = details;\n        this.fields = Utils.internalFieldsFilter(Object.keys(details));\n\n        for (let field of this.fields) {\n          //create form controls dynamically:\n          let form = this._formBuilder.control(\n            {\n              value: this.data[field],\n              disabled: field === 'id',\n            },\n            Validators.required,\n          );\n\n          this.formControlsArray.push(form);\n          this.form.addControl(field, form);\n        }\n      });\n    });\n  }\n\n  backClicked() {\n    this._location.back();\n  }\n\n  submit() {\n    this.currentService\n      .edit(this.id, this.form.value)\n      .pipe(\n        catchError((err) => {\n          this.toaster.error(err.error['hydra:description']);\n          return throwError(err);\n        }),\n      )\n      .subscribe(() => {\n        this.toaster.success(this.translateService.instant('EDITED'));\n      });\n  }\n}\n","<form class=\"mb-3\" [formGroup]=\"form\">\n  <div *ngFor=\"let field of fields; let i = index\" class=\"mt-2\">\n    <label [for]=\"field\" class=\"form-label\" role=\"button\">{{ field | translate }}</label>\n    <input *ngIf=\"field !== 'text'\" type=\"text\" class=\"form-control\" [id]=\"field\" [formControl]=\"formControlsArray[i]\" />\n    <!--todo question improvement for show false or true / text-->\n    <st-editor *ngIf=\"item === 'units' && field === 'text'\" [formControl]=\"formControlsArray[i]\" [config]=\"config\"></st-editor>\n  </div>\n  <div class=\"form-actions mt-3 text-center\">\n    <button type=\"submit\" class=\"btn btn-outline-primary me-3\" (click)=\"submit()\">{{ 'SAVE' | translate }}</button>\n    <button (click)=\"backClicked()\" class=\"btn btn-outline\">{{ 'GO_BACK' | translate }}</button>\n  </div>\n</form>\n","import { Component, OnInit } from '@angular/core';\nimport { Location } from '@angular/common';\nimport { ActivatedRoute } from '@angular/router';\nimport { UntypedFormBuilder, UntypedFormGroup, Validators } from '@angular/forms';\nimport { ToastrService } from 'ngx-toastr';\nimport { TranslateService } from '@ngx-translate/core';\nimport { catchError } from 'rxjs/operators';\nimport { throwError } from 'rxjs';\nimport { BOLD_BUTTON, EditorConfig, ITALIC_BUTTON, SEPARATOR, UNDO_BUTTON } from 'ngx-simple-text-editor';\nimport { SubjectService } from '../../../../services/subject.service';\nimport { UnitService } from '../../../../services/unit.service';\nimport { ExerciseService } from '../../../../services/exercise.service';\n\n@Component({\n  selector: 'app-new-item',\n  templateUrl: './new-item.component.html',\n})\nexport class NewItemComponent implements OnInit {\n  item: string;\n  currentService: SubjectService | UnitService | ExerciseService;\n  fields: string[];\n  form: UntypedFormGroup;\n  formControlsArray = [];\n\n  config: EditorConfig = {\n    buttons: [UNDO_BUTTON, SEPARATOR, BOLD_BUTTON, ITALIC_BUTTON],\n  };\n\n  constructor(\n    public route: ActivatedRoute,\n    public subjectService: SubjectService,\n    public unitService: UnitService,\n    public exerciseService: ExerciseService,\n    private _formBuilder: UntypedFormBuilder,\n    private toaster: ToastrService,\n    private translateService: TranslateService,\n    private _location: Location,\n  ) {\n    this.form = this._formBuilder.group({\n      formControlsArray: this._formBuilder.array([]),\n    });\n  }\n\n  ngOnInit(): void {\n    this.route.paramMap.subscribe((params) => {\n      this.item = params.get('item');\n      switch (this.item) {\n        case 'subjects':\n          this.currentService = this.subjectService;\n          this.fields = ['name', 'course'];\n          break;\n        case 'units':\n          this.currentService = this.unitService;\n          this.fields = ['title', 'text', 'subject'];\n          break;\n        case 'exercises':\n          this.currentService = this.exerciseService;\n          this.fields = ['title', 'question', 'answer', 'unit'];\n          break;\n      }\n\n      for (let field of this.fields) {\n        //create form controls dynamically:\n        let form = this._formBuilder.control('', Validators.required);\n\n        this.formControlsArray.push(form);\n        this.form.addControl(field, form);\n      }\n    });\n  }\n\n  backClicked() {\n    this._location.back();\n  }\n\n  submit() {\n    this.currentService\n      .add(this.form.value)\n      .pipe(\n        catchError((err) => {\n          this.toaster.error(err.error['hydra:description']);\n          return throwError(err);\n        }),\n      )\n      .subscribe(() => {\n        this.toaster.success(this.translateService.instant('ADDED'));\n      });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Router, ActivatedRouteSnapshot, RouterStateSnapshot, CanActivate } from '@angular/router';\nimport { AuthService } from './services/auth.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n  constructor(\n    private auth: AuthService,\n    private router: Router,\n    private toaster: ToastrService,\n    private translateService: TranslateService,\n  ) {}\n\n  async canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Promise<boolean> {\n    if (this.auth.isAdmin()) {\n      // logged in as admin so return true and allow navigation\n      return true;\n    }\n    if (this.auth.isUser()) {\n      // logged in as plain user so return false and warn\n      this.toaster.error(this.translateService.instant('FORBIDDEN'));\n      return false;\n    }\n    // not logged in so redirect to login page\n    this.toaster.info(this.translateService.instant('LOGIN_PLEASE'));\n    await this.router.navigate(['/auth'], { queryParams: { returnUrl: state.url } });\n    return false;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AdminComponent } from './containers/admin/admin.component';\nimport { EditItemComponent } from './components/edit-item/edit-item.component';\nimport { NewItemComponent } from './components/new-item/new-item.component';\nimport { AuthGuard } from '../auth/auth.guard';\n\nconst routes: Routes = [\n  { path: '', component: AdminComponent, canActivate: [AuthGuard] },\n  { path: 'new/:item', component: NewItemComponent, canActivate: [AuthGuard] },\n  { path: 'edit/:item/:id', component: EditItemComponent, canActivate: [AuthGuard] },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AdminRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { NgxSimpleTextEditorModule } from 'ngx-simple-text-editor';\nimport { AdminRoutingModule } from './admin-routing.module';\nimport { AdminComponent } from './containers/admin/admin.component';\nimport { TableComponent } from './components/table/table.component';\nimport { EditItemComponent } from './components/edit-item/edit-item.component';\nimport { NewItemComponent } from './components/new-item/new-item.component';\nimport { AuthGuard } from '../auth/auth.guard';\n\n@NgModule({\n  declarations: [AdminComponent, TableComponent, EditItemComponent, NewItemComponent],\n  imports: [CommonModule, AdminRoutingModule, TranslateModule, FormsModule, ReactiveFormsModule, NgxSimpleTextEditorModule],\n  providers: [AuthGuard],\n})\nexport class AdminModule {}\n"],"x_google_ignoreList":[0]}