{"version":3,"file":"common.a792b5c7aeb29102.js","mappings":"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","names":["Particles","constructor","this","QUANTITY","PARTICLE_SIZE","CONTAINER","document","querySelector","window","defaultView","drawParticles","CANVAS","getContext","context","globalCompositeOperation","addEventListener","windowResizeHandler","bind","createParticles","loop","SCREEN_WIDTH","offsetWidth","SCREEN_HEIGHT","offsetHeight","width","height","particles","i","posX","Math","random","posY","speed","directionX","directionY","push","position","x","y","size","targetX","targetY","depth","index","fillColor","toString","console","log","theme","documentElement","getAttribute","fillStyle","fillRect","canvas","z","xdist","ydist","dist","length","particle","lp","s","bounceParticle","abs","sqrt","randomiseDirection","beginPath","lineWidth","moveTo","arc","PI","closePath","fill","requestAnimationFrame","d","floor","r","sin","cos"],"sourceRoot":"webpack:///","sources":["./src/app/particles.ts"],"sourcesContent":["// @see https://codepen.io/72lions/pen/nzdpWz\nexport class Particles {\n  QUANTITY = 100;\n  PARTICLE_SIZE = 10;\n  CONTAINER;\n  SCREEN_WIDTH;\n  SCREEN_HEIGHT;\n  CANVAS;\n  context;\n  particles;\n  window;\n\n  constructor() {\n    this.CONTAINER = document.querySelector('section');\n    // @see https://stackoverflow.com/a/52620181/16711967\n    this.window = document.defaultView;\n  }\n\n  drawParticles(): void {\n    this.CANVAS = document.querySelector('.canvas-background');\n    if (!!(this.CANVAS && this.CANVAS.getContext)) {\n      //CANVAS.style.position = 'absolute';\n      this.context = this.CANVAS.getContext('2d');\n      this.context.globalCompositeOperation = 'destination-over';\n      // @see https://stackoverflow.com/a/51600005\n      // @see https://stackoverflow.com/a/43505254/16711967\n      this.window.addEventListener('resize', this.windowResizeHandler.bind(this), false);\n      this.windowResizeHandler();\n      this.createParticles();\n      this.loop();\n    }\n  }\n\n  windowResizeHandler(): void {\n    this.SCREEN_WIDTH = this.CONTAINER.offsetWidth;\n    this.SCREEN_HEIGHT = this.CONTAINER.offsetHeight;\n    this.CANVAS.width = this.SCREEN_WIDTH;\n    this.CANVAS.height = this.SCREEN_HEIGHT;\n  }\n\n  createParticles(): void {\n    this.particles = [];\n    const depth = 0;\n\n    for (let i = 0; i < this.QUANTITY; i++) {\n      const posX = this.PARTICLE_SIZE / 2 + Math.random() * (this.CONTAINER.offsetWidth - this.PARTICLE_SIZE / 2);\n      const posY = this.PARTICLE_SIZE / 2 + Math.random() * (this.CONTAINER.offsetHeight - this.PARTICLE_SIZE / 2);\n\n      const speed = 2;\n      const directionX = -speed + Math.random() * speed * 2;\n      const directionY = -speed + Math.random() * speed * 2;\n\n      this.particles.push({\n        position: { x: posX, y: posY },\n        size: this.PARTICLE_SIZE,\n        directionX,\n        directionY,\n        speed,\n        targetX: posX,\n        targetY: posY,\n        depth,\n        index: i,\n        fillColor: `#${((Math.random() * 0x00eaff + 0xff0000) | 0).toString(16)}`,\n      });\n    }\n  }\n\n  loop(): void {\n    this.CANVAS = document.querySelector('.canvas-background');\n    if (!!(this.CANVAS && this.CANVAS.getContext)) {\n      console.log('LOOPING', this.CANVAS);\n      const theme = document.documentElement.getAttribute('data-bs-theme');\n      this.context.fillStyle = theme === 'dark' ? 'rgba(33, 37, 41, 0.2)' : 'rgba(248, 249, 250, 0.2)';\n      this.context.fillRect(0, 0, this.context.canvas.width, this.context.canvas.height);\n\n      let z = 0;\n      let xdist = 0;\n      let ydist = 0;\n      let dist = 0;\n\n      for (let i = 0; i < this.particles.length; i++) {\n        const particle = this.particles[i];\n\n        const lp = { x: particle.position.x, y: particle.position.y };\n\n        if (particle.position.x <= particle.size / 2 || particle.position.x >= this.SCREEN_WIDTH - this.PARTICLE_SIZE / 2) {\n          particle.directionX *= -1;\n        }\n\n        if (particle.position.y <= particle.size / 2 || particle.position.y >= this.SCREEN_HEIGHT - this.PARTICLE_SIZE / 2) {\n          particle.directionY *= -1;\n        }\n\n        for (let s = 0; s < this.particles.length; s++) {\n          const bounceParticle = this.particles[s];\n          if (bounceParticle.index !== particle.index) {\n            //what are the distances\n            z = this.PARTICLE_SIZE;\n            xdist = Math.abs(bounceParticle.position.x - particle.position.x);\n            ydist = Math.abs(bounceParticle.position.y - particle.position.y);\n            dist = Math.sqrt(xdist ** 2 + ydist ** 2);\n            if (dist < z) {\n              this.randomiseDirection(particle);\n              this.randomiseDirection(bounceParticle);\n            }\n          }\n        }\n\n        particle.position.x -= particle.directionX;\n        particle.position.y -= particle.directionY;\n\n        this.context.beginPath();\n        this.context.fillStyle = particle.fillColor;\n        this.context.lineWidth = particle.size;\n        this.context.moveTo(lp.x, lp.y);\n        this.context.arc(particle.position.x, particle.position.y, particle.size / 2, 0, Math.PI * 2, true);\n        this.context.closePath();\n        this.context.fill();\n      }\n\n      // @see https://stackoverflow.com/a/43505254/16711967\n      this.window.requestAnimationFrame(this.loop.bind(this));\n    }\n  }\n\n  randomiseDirection(particle): void {\n    //pick a random deg\n    let d = 0;\n    while (d === 0 || d === 90 || d === 180 || d === 360) {\n      d = Math.floor(Math.random() * 360);\n    }\n\n    const r = (d * 180) / Math.PI;\n    particle.directionX = Math.sin(r) * particle.speed;\n    particle.directionY = Math.cos(r) * particle.speed;\n  }\n}\n"],"x_google_ignoreList":[]}