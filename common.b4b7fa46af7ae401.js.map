{"version":3,"file":"common.b4b7fa46af7ae401.js","mappings":"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","names":["Particles","constructor","this","QUANTITY","PARTICLE_SIZE","CONTAINER","document","querySelector","window","defaultView","drawParticles","CANVAS","getContext","context","globalCompositeOperation","addEventListener","windowResizeHandler","createParticles","loop","SCREEN_WIDTH","offsetWidth","SCREEN_HEIGHT","offsetHeight","width","height","particles","i","posX","Math","random","posY","speed","directionX","directionY","push","position","x","y","size","targetX","targetY","depth","index","fillColor","toString","theme","documentElement","getAttribute","fillStyle","fillRect","canvas","z","xdist","ydist","dist","length","particle","lp","s","bounceParticle","abs","sqrt","randomiseDirection","beginPath","lineWidth","moveTo","arc","PI","closePath","fill","requestAnimationFrame","d","floor","r","sin","cos"],"sourceRoot":"webpack:///","sources":["./src/app/particles.ts"],"sourcesContent":["// @see https://codepen.io/72lions/pen/nzdpWz\nexport class Particles {\n  QUANTITY = 100;\n  PARTICLE_SIZE = 10;\n  CONTAINER;\n  SCREEN_WIDTH;\n  SCREEN_HEIGHT;\n  CANVAS;\n  context;\n  particles;\n  window;\n\n  constructor() {\n    this.CONTAINER = document.querySelector('section');\n    // @see https://stackoverflow.com/a/52620181/16711967\n    this.window = document.defaultView;\n  }\n\n  drawParticles(): void {\n    this.CANVAS = document.querySelector('.canvas-background');\n    if (this.CANVAS && this.CANVAS.getContext) {\n      //CANVAS.style.position = 'absolute';\n      this.context = this.CANVAS.getContext('2d');\n      this.context.globalCompositeOperation = 'destination-over';\n      // @see https://stackoverflow.com/a/51600005\n      this.window.addEventListener('resize', () => this.windowResizeHandler(), false);\n      this.windowResizeHandler();\n      this.createParticles();\n      this.loop();\n    }\n  }\n\n  windowResizeHandler(): void {\n    this.SCREEN_WIDTH = this.CONTAINER.offsetWidth;\n    this.SCREEN_HEIGHT = this.CONTAINER.offsetHeight;\n    this.CANVAS.width = this.SCREEN_WIDTH;\n    this.CANVAS.height = this.SCREEN_HEIGHT;\n  }\n\n  createParticles(): void {\n    this.particles = [];\n    const depth = 0;\n\n    for (let i = 0; i < this.QUANTITY; i++) {\n      const posX = this.PARTICLE_SIZE / 2 + Math.random() * (this.CONTAINER.offsetWidth - this.PARTICLE_SIZE / 2);\n      const posY = this.PARTICLE_SIZE / 2 + Math.random() * (this.CONTAINER.offsetHeight - this.PARTICLE_SIZE / 2);\n\n      const speed = 2;\n      const directionX = -speed + Math.random() * speed * 2;\n      const directionY = -speed + Math.random() * speed * 2;\n\n      this.particles.push({\n        position: { x: posX, y: posY },\n        size: this.PARTICLE_SIZE,\n        directionX,\n        directionY,\n        speed,\n        targetX: posX,\n        targetY: posY,\n        depth,\n        index: i,\n        fillColor: `#${((Math.random() * 0x00eaff + 0xff0000) | 0).toString(16)}`,\n      });\n    }\n  }\n\n  loop(): void {\n    const theme = document.documentElement.getAttribute('data-bs-theme');\n    this.context.fillStyle = theme === 'dark' ? 'rgba(33, 37, 41, 0.2)' : 'rgba(248, 249, 250, 0.2)';\n    this.context.fillRect(0, 0, this.context.canvas.width, this.context.canvas.height);\n\n    let z = 0;\n    let xdist = 0;\n    let ydist = 0;\n    let dist = 0;\n\n    for (let i = 0; i < this.particles.length; i++) {\n      const particle = this.particles[i];\n\n      const lp = { x: particle.position.x, y: particle.position.y };\n\n      if (particle.position.x <= particle.size / 2 || particle.position.x >= this.SCREEN_WIDTH - this.PARTICLE_SIZE / 2) {\n        particle.directionX *= -1;\n      }\n\n      if (particle.position.y <= particle.size / 2 || particle.position.y >= this.SCREEN_HEIGHT - this.PARTICLE_SIZE / 2) {\n        particle.directionY *= -1;\n      }\n\n      for (let s = 0; s < this.particles.length; s++) {\n        const bounceParticle = this.particles[s];\n        if (bounceParticle.index !== particle.index) {\n          //what are the distances\n          z = this.PARTICLE_SIZE;\n          xdist = Math.abs(bounceParticle.position.x - particle.position.x);\n          ydist = Math.abs(bounceParticle.position.y - particle.position.y);\n          dist = Math.sqrt(xdist ** 2 + ydist ** 2);\n          if (dist < z) {\n            this.randomiseDirection(particle);\n            this.randomiseDirection(bounceParticle);\n          }\n        }\n      }\n\n      particle.position.x -= particle.directionX;\n      particle.position.y -= particle.directionY;\n\n      this.context.beginPath();\n      this.context.fillStyle = particle.fillColor;\n      this.context.lineWidth = particle.size;\n      this.context.moveTo(lp.x, lp.y);\n      this.context.arc(particle.position.x, particle.position.y, particle.size / 2, 0, Math.PI * 2, true);\n      this.context.closePath();\n      this.context.fill();\n    }\n\n    this.window.requestAnimationFrame(() => this.loop());\n  }\n\n  randomiseDirection(particle): void {\n    //pick a random deg\n    let d = 0;\n    while (d === 0 || d === 90 || d === 180 || d === 360) {\n      d = Math.floor(Math.random() * 360);\n    }\n\n    const r = (d * 180) / Math.PI;\n    particle.directionX = Math.sin(r) * particle.speed;\n    particle.directionY = Math.cos(r) * particle.speed;\n  }\n}\n"],"x_google_ignoreList":[]}