{"version":3,"file":"870.5a1d4d194a3faa8a.js","mappings":"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","names":["_c0","_c1","EditorInputComponent_div_1_label_2_Template","rf","ctx","i0","ctx_r1","button","label","EditorInputComponent_div_1_Template","_r1","closeInputWindow","$event","value","onCommand","margin","opacity","EditorSelectComponent_option_1_Template","i_r1","$implicit","_c2","EditorDropdownComponent_option_4_Template","i_r3","_c3","EditorComponent_ng_container_2_st_separator_1_Template","EditorComponent_ng_container_2_st_button_2_Template","_r2","ctx_r2","execCommand","item_r4","queryCommandState","command","EditorComponent_ng_container_2_st_select_3_Template","_r5","EditorComponent_ng_container_2_st_color_picker_4_Template","_r6","EditorComponent_ng_container_2_st_input_5_Template","_r7","EditorComponent_ng_container_2_st_dropdown_6_Template","_r8","EditorComponent_ng_container_2_Template","type","toolbarItemType","Separator","Button","Select","Color","Input","Dropdown","ToolbarItemType","UNDO_BUTTON","icon","title","SEPARATOR","BOLD_BUTTON","ITALIC_BUTTON","ST_BUTTONS","items","text","CommandService","constructor","document","this","isCommandWithValue","item","isCommandWithState","getQueryCommandState","buttons","filter","reduce","acc","curr","queryCommandValue","String","static","ɵfac","t","DOCUMENT","ɵprov","token","factory","EditorButtonComponent","EventEmitter","emit","ɵcmp","selectors","inputs","state","outputs","decls","vars","consts","template","styles","EditorColorPickerComponent","rgbStringToHex","rgb","match","map","x","hex","Number","toString","length","join","colorPicker_r2","click","target","dependencies","i2","EditorInputComponent","element","showInputWindow","selectionRange","loadSelection","transform","openInputWindow","saveSelection","setTimeout","windowElement","nativeElement","getBoundingClientRect","width","inputElement","focus","outsideClick","contains","selection","defaultView","getSelection","removeAllRanges","addRange","rangeCount","getRangeAt","viewQuery","_t","first","hostBindings","i2$1","EditorSelectComponent","ngOnInit","EditorSeparatorComponent","MUTATION_OBSERVER_CONFIG","attributes","childList","subtree","characterData","DomModifyDirective","domModify","observer","MutationObserver","observe","ngOnDestroy","disconnect","ɵdir","SelectionChangeDirective","selectionChange","selectionchange","activeElement","EditorDropdownComponent","val","_button","_tempButton","ngAfterViewInit","selectElement","find","select_r2","DEFAULT_CONFIG","placeholder","EditorComponent","config","_config","commandService","content","isDisabled","updateContentEditable","writeValue","registerOnChange","fn","onChangeFn","registerOnTouched","onTouchedFn","setDisabledState","contentEditable","innerHTML","fetchQueryCommandState","trackBy","_","name","features","provide","NG_VALUE_ACCESSOR","useExisting","multi","NgxSimpleTextEditorModule","ɵmod","ɵinj","imports","CommonModule","FormsModule","ReactiveFormsModule","head_r1","column_r3","TableComponent_div_0_tr_9_td_1_Template","row_r4","ctx_r4","deleteByID","id","getArrayDataFromJSON","currentType","TableComponent_div_0_th_4_Template","TableComponent_div_0_tr_9_Template","getArrayFieldsFromJSON","data","TableComponent","http","toaster","translateService","json","field","fields","push","internalFieldsFilter","Object","keys","array","fieldsToRemoveFromResponse","indexOf","delete","environment","apiUrl","pipe","catchError","err","error","throwError","subscribe","success","instant","deleted","splice","i1","i3","core","VBU","standalone","TableComponent_div_0_Template","NgIf","NgFor","RouterLink","TranslateModule","AdminComponent","subjectService","unitService","exerciseService","subjects$","get","units$","exercises$","currentTab","currentService","setCurrentNav","event","setCurrentData","AsyncPipe","i4","encapsulation","Utils","field_r2","ctx_r3","formControlsArray","EditItemComponent_div_1_input_4_Template","EditItemComponent_div_1_st_editor_5_Template","EditItemComponent","route","_formBuilder","_location","htmlContent","form","group","paramMap","params","parseInt","getOne","details","control","disabled","Validators","required","addControl","backClicked","back","submit","edit","i5","i6","i7","i8","EditItemComponent_div_1_Template","i9","NewItemComponent_div_1_input_4_Template","NewItemComponent_div_1_st_editor_5_Template","NewItemComponent","add","NewItemComponent_div_1_Template","AuthGuard","auth","router","canActivate","_this","_asyncToGenerator","isAdmin","isUser","info","navigate","queryParams","returnUrl","url","jDH","routes","path","component","AdminRoutingModule","$C","G2t","RouterModule","forChild","AdminModule"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./node_modules/ngx-simple-text-editor/fesm2022/ngx-simple-text-editor.mjs","./src/app/modules/admin/components/table/table.component.html","./src/app/modules/admin/components/table/table.component.ts","./src/app/modules/admin/containers/admin/admin.component.ts","./src/app/modules/admin/containers/admin/admin.component.html","./src/app/utils.ts","./src/app/modules/admin/components/edit-item/edit-item.component.html","./src/app/modules/admin/components/edit-item/edit-item.component.ts","./src/app/modules/admin/components/new-item/new-item.component.html","./src/app/modules/admin/components/new-item/new-item.component.ts","./src/app/modules/auth/auth.guard.ts","./src/app/modules/admin/admin-routing.module.ts","./src/app/modules/admin/admin.module.ts"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { Injectable, Inject, EventEmitter, Component, Input, Output, ViewChild, HostListener, Directive, NgModule } from '@angular/core';\nimport * as i2$1 from '@angular/common';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport * as i2 from '@angular/forms';\nimport { NG_VALUE_ACCESSOR, FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nvar ToolbarItemType;\n(function (ToolbarItemType) {\n    ToolbarItemType[ToolbarItemType[\"Separator\"] = 0] = \"Separator\";\n    ToolbarItemType[ToolbarItemType[\"Button\"] = 1] = \"Button\";\n    ToolbarItemType[ToolbarItemType[\"Select\"] = 2] = \"Select\";\n    ToolbarItemType[ToolbarItemType[\"Color\"] = 3] = \"Color\";\n    ToolbarItemType[ToolbarItemType[\"Input\"] = 4] = \"Input\";\n    ToolbarItemType[ToolbarItemType[\"Dropdown\"] = 5] = \"Dropdown\";\n})(ToolbarItemType || (ToolbarItemType = {}));\n\nconst UNDO_BUTTON = { type: ToolbarItemType.Button, command: \"undo\" /* ExecCommand.undo */, icon: 'fas fa-undo', title: 'undo' };\nconst REDO_BUTTON = { type: ToolbarItemType.Button, command: \"redo\" /* ExecCommand.redo */, icon: 'fas fa-redo', title: 'redo' };\nconst REMOVE_FORMAT_BUTTON = { type: ToolbarItemType.Button, command: \"removeFormat\" /* ExecCommand.removeFormat */, icon: 'fas fa-remove-format', title: 'remove format' };\nconst SEPARATOR = { type: ToolbarItemType.Separator };\nconst BOLD_BUTTON = { type: ToolbarItemType.Button, command: \"bold\" /* ExecCommand.bold */, icon: 'fas fa-bold', title: 'bold' };\nconst ITALIC_BUTTON = { type: ToolbarItemType.Button, command: \"italic\" /* ExecCommand.italic */, icon: 'fas fa-italic', title: 'italic' };\nconst UNDERLINE_BUTTON = { type: ToolbarItemType.Button, command: \"underline\" /* ExecCommand.underline */, icon: 'fas fa-underline', title: 'underline' };\nconst STRIKE_THROUGH_BUTTON = { type: ToolbarItemType.Button, command: \"strikeThrough\" /* ExecCommand.strikeThrough */, icon: 'fas fa-strikethrough', title: 'strikethrough' };\nconst JUSTIFY_LEFT_BUTTON = { type: ToolbarItemType.Button, command: \"justifyLeft\" /* ExecCommand.justifyLeft */, icon: 'fas fa-align-left', title: 'align left' };\nconst JUSTIFY_CENTER_BUTTON = { type: ToolbarItemType.Button, command: \"justifyCenter\" /* ExecCommand.justifyCenter */, icon: 'fas fa-align-center', title: 'align center' };\nconst JUSTIFY_RIGHT_BUTTON = { type: ToolbarItemType.Button, command: \"justifyRight\" /* ExecCommand.justifyRight */, icon: 'fas fa-align-right', title: 'align right' };\nconst JUSTIFY_FULL_BUTTON = { type: ToolbarItemType.Button, command: \"justifyFull\" /* ExecCommand.justifyFull */, icon: 'fas fa-align-justify', title: 'align justify' };\nconst ORDERED_LIST_BUTTON = { type: ToolbarItemType.Button, command: \"insertOrderedList\" /* ExecCommand.insertOrderedList */, icon: 'fas fa-list-ol', title: 'ordered list' };\nconst UNORDERED_LIST_BUTTON = { type: ToolbarItemType.Button, command: \"insertUnorderedList\" /* ExecCommand.insertUnorderedList */, icon: 'fas fa-list-ul', title: 'unordered list' };\nconst INDENT_BUTTON = { type: ToolbarItemType.Button, command: \"indent\" /* ExecCommand.indent */, icon: 'fas fa-indent', title: 'indent' };\nconst OUTDENT_BUTTON = { type: ToolbarItemType.Button, command: \"outdent\" /* ExecCommand.outdent */, icon: 'fas fa-outdent', title: 'outdent' };\nconst SUBSCRIPT_BUTTON = { type: ToolbarItemType.Button, command: \"subscript\" /* ExecCommand.subscript */, icon: 'fas fa-subscript', title: 'subscript' };\nconst SUPERSCRIPT_BUTTON = { type: ToolbarItemType.Button, command: \"superscript\" /* ExecCommand.superscript */, icon: 'fas fa-superscript', title: 'superscript' };\nconst FONT_SIZE_SELECT = {\n    type: ToolbarItemType.Select, command: \"fontSize\" /* ExecCommand.fontSize */, title: 'font size', items: [\n        { value: 1, label: '1' },\n        { value: 2, label: '2' },\n        { value: 3, label: '3' },\n        { value: 4, label: '4' },\n        { value: 5, label: '5' },\n        { value: 6, label: '6' },\n        { value: 7, label: '7' },\n    ]\n};\nconst LINK_INPUT = { type: ToolbarItemType.Input, command: \"createLink\" /* ExecCommand.createLink */, icon: 'fas fa-link', text: 'Create link', title: 'create link', label: 'Create link' };\nconst UNLINK_BUTTON = { type: ToolbarItemType.Button, command: \"unlink\" /* ExecCommand.unlink */, icon: 'fas fa-unlink', title: 'unlink' };\nconst FORE_COLOR = { type: ToolbarItemType.Color, command: \"foreColor\" /* ExecCommand.foreColor */, icon: 'fas fa-palette', title: 'font color' };\nconst IMAGE_INPUT = { type: ToolbarItemType.Input, command: \"insertImage\" /* ExecCommand.insertImage */, icon: 'fas fa-image', text: 'Add image', title: 'add image', label: 'Create image from link' };\nconst CUSTOM = {\n    type: ToolbarItemType.Dropdown, label: 'Custom', title: 'test custom', items: [\n        { command: \"insertHTML\" /* ExecCommand.insertHTML */, value: '<b>This is bold<b>', label: 'Custom bold text' },\n        { command: \"italic\" /* ExecCommand.italic */, value: null, label: 'Make Italic' },\n    ]\n};\nconst ST_BUTTONS = [\n    UNDO_BUTTON,\n    REDO_BUTTON,\n    REMOVE_FORMAT_BUTTON,\n    SEPARATOR,\n    BOLD_BUTTON,\n    ITALIC_BUTTON,\n    UNDERLINE_BUTTON,\n    STRIKE_THROUGH_BUTTON,\n    SEPARATOR,\n    JUSTIFY_LEFT_BUTTON,\n    JUSTIFY_CENTER_BUTTON,\n    JUSTIFY_RIGHT_BUTTON,\n    JUSTIFY_FULL_BUTTON,\n    SEPARATOR,\n    ORDERED_LIST_BUTTON,\n    UNORDERED_LIST_BUTTON,\n    SEPARATOR,\n    INDENT_BUTTON,\n    OUTDENT_BUTTON,\n    SEPARATOR,\n    SUBSCRIPT_BUTTON,\n    SUPERSCRIPT_BUTTON,\n    SEPARATOR,\n    FONT_SIZE_SELECT,\n    LINK_INPUT,\n    UNLINK_BUTTON,\n    SEPARATOR,\n    IMAGE_INPUT,\n    FORE_COLOR,\n];\n\nclass CommandService {\n    constructor(document) {\n        this.document = document;\n    }\n    isCommandWithValue(item) {\n        return item.type === ToolbarItemType.Select || item.type === ToolbarItemType.Color;\n    }\n    isCommandWithState(item) {\n        return item.type === ToolbarItemType.Button;\n    }\n    getQueryCommandState(buttons) {\n        return buttons\n            .filter(item => this.isCommandWithValue(item) || this.isCommandWithState(item))\n            .reduce((acc, curr) => ({\n            ...acc,\n            [curr.command]: this.isCommandWithValue(curr) ?\n                this.document.queryCommandValue(String(curr.command)) :\n                this.document.queryCommandState(String(curr.command)),\n        }), {});\n    }\n    execCommand(command, value) {\n        this.document.execCommand(command, false, value ? String(value) : value);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.3.2\", ngImport: i0, type: CommandService, deps: [{ token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"17.3.2\", ngImport: i0, type: CommandService }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.3.2\", ngImport: i0, type: CommandService, decorators: [{\n            type: Injectable\n        }], ctorParameters: () => [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }] });\n\nclass EditorButtonComponent {\n    constructor() {\n        this.command = new EventEmitter();\n    }\n    onCommand(command) {\n        this.command.emit(command);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.3.2\", ngImport: i0, type: EditorButtonComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.3.2\", type: EditorButtonComponent, selector: \"st-button\", inputs: { button: \"button\", state: \"state\" }, outputs: { command: \"command\" }, ngImport: i0, template: \"<button class=\\\"st-button st-toolbar-item\\\"\\n        [title]=\\\"button?.title || ''\\\"\\n        (click)=\\\"onCommand(button?.command)\\\"\\n        [class.active]=\\\"state\\\">\\n  <i [class]=\\\"button?.icon\\\"></i>\\n</button>\\n\", styles: [\".st-toolbar-item{border:0;padding:8px 14px;background-color:#fff;border-radius:5px;margin-right:1px;cursor:pointer}.st-toolbar-item:hover{background-color:#e0e0e0}.st-toolbar-item:focus{outline-color:#424242}.st-button:hover{background-color:#e0e0e0}.st-button:active{transform:scale(.98);box-shadow:1px 1px 7px 1px #e0e0e0}.st-button.active{background-color:#424242;color:#fff}\\n\"] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.3.2\", ngImport: i0, type: EditorButtonComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'st-button', template: \"<button class=\\\"st-button st-toolbar-item\\\"\\n        [title]=\\\"button?.title || ''\\\"\\n        (click)=\\\"onCommand(button?.command)\\\"\\n        [class.active]=\\\"state\\\">\\n  <i [class]=\\\"button?.icon\\\"></i>\\n</button>\\n\", styles: [\".st-toolbar-item{border:0;padding:8px 14px;background-color:#fff;border-radius:5px;margin-right:1px;cursor:pointer}.st-toolbar-item:hover{background-color:#e0e0e0}.st-toolbar-item:focus{outline-color:#424242}.st-button:hover{background-color:#e0e0e0}.st-button:active{transform:scale(.98);box-shadow:1px 1px 7px 1px #e0e0e0}.st-button.active{background-color:#424242;color:#fff}\\n\"] }]\n        }], propDecorators: { button: [{\n                type: Input\n            }], state: [{\n                type: Input\n            }], command: [{\n                type: Output\n            }] } });\n\nconst DEFAULT_COLOR = '#000000';\nclass EditorColorPickerComponent {\n    constructor() {\n        this.command = new EventEmitter();\n    }\n    onCommand(command, value) {\n        this.command.emit({ command, value });\n    }\n    rgbStringToHex(rgb) {\n        const match = String(rgb).match(/rgba?\\((\\d{1,3}), ?(\\d{1,3}), ?(\\d{1,3})\\)?(?:, ?(\\d(?:\\.\\d?))\\))?/);\n        return !match ? DEFAULT_COLOR : '#' + [match[1], match[2], match[3]].map(x => {\n            const hex = Number(x).toString(16);\n            return hex.length === 1 ? '0' + hex : hex;\n        }).join('');\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.3.2\", ngImport: i0, type: EditorColorPickerComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.3.2\", type: EditorColorPickerComponent, selector: \"st-color-picker\", inputs: { button: \"button\", state: \"state\" }, outputs: { command: \"command\" }, ngImport: i0, template: \"<button class=\\\"st-button st-toolbar-item\\\" [title]=\\\"button?.title || ''\\\" (click)=\\\"colorPicker.click()\\\">\\n  {{rgbStringToHex(state)}}\\n  <input #colorPicker class=\\\"st-color-picker\\\" type=\\\"color\\\" [ngModel]=\\\"rgbStringToHex(state)\\\" tabindex=\\\"-1\\\"\\n         (change)=\\\"onCommand(button?.command, $event.target.value)\\\" onmousedown='return false;' onselectstart='return false;'>\\n  <i [class]=\\\"button?.icon\\\" [style.color]=\\\"state\\\"></i>\\n</button>\\n\", styles: [\".st-toolbar-item{border:0;padding:8px 14px;background-color:#fff;border-radius:5px;margin-right:1px;cursor:pointer}.st-toolbar-item:hover{background-color:#e0e0e0}.st-toolbar-item:focus{outline-color:#424242}.st-button:hover{background-color:#e0e0e0}.st-button:active{transform:scale(.98);box-shadow:1px 1px 7px 1px #e0e0e0}.st-button.active{background-color:#424242;color:#fff}.st-color-picker{width:0;height:0;border:0;padding:0;margin:0;pointer-events:none}\\n\"], dependencies: [{ kind: \"directive\", type: i2.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { kind: \"directive\", type: i2.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { kind: \"directive\", type: i2.NgModel, selector: \"[ngModel]:not([formControlName]):not([formControl])\", inputs: [\"name\", \"disabled\", \"ngModel\", \"ngModelOptions\"], outputs: [\"ngModelChange\"], exportAs: [\"ngModel\"] }] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.3.2\", ngImport: i0, type: EditorColorPickerComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'st-color-picker', template: \"<button class=\\\"st-button st-toolbar-item\\\" [title]=\\\"button?.title || ''\\\" (click)=\\\"colorPicker.click()\\\">\\n  {{rgbStringToHex(state)}}\\n  <input #colorPicker class=\\\"st-color-picker\\\" type=\\\"color\\\" [ngModel]=\\\"rgbStringToHex(state)\\\" tabindex=\\\"-1\\\"\\n         (change)=\\\"onCommand(button?.command, $event.target.value)\\\" onmousedown='return false;' onselectstart='return false;'>\\n  <i [class]=\\\"button?.icon\\\" [style.color]=\\\"state\\\"></i>\\n</button>\\n\", styles: [\".st-toolbar-item{border:0;padding:8px 14px;background-color:#fff;border-radius:5px;margin-right:1px;cursor:pointer}.st-toolbar-item:hover{background-color:#e0e0e0}.st-toolbar-item:focus{outline-color:#424242}.st-button:hover{background-color:#e0e0e0}.st-button:active{transform:scale(.98);box-shadow:1px 1px 7px 1px #e0e0e0}.st-button.active{background-color:#424242;color:#fff}.st-color-picker{width:0;height:0;border:0;padding:0;margin:0;pointer-events:none}\\n\"] }]\n        }], propDecorators: { button: [{\n                type: Input\n            }], state: [{\n                type: Input\n            }], command: [{\n                type: Output\n            }] } });\n\nconst APPROX_WIDTH_THRESHOLD = 278;\nconst MARGIN_OFFSET = -150;\nclass EditorInputComponent {\n    constructor(element, document) {\n        this.element = element;\n        this.document = document;\n        this.command = new EventEmitter();\n        this.showInputWindow = false;\n        this.value = '';\n        this.margin = 0; // workaround fox window width computing\n        this.opacity = 0; // workaround fox window width computing\n    }\n    onCommand() {\n        if (this.value) {\n            if (this.selectionRange) {\n                this.loadSelection();\n            }\n            this.closeInputWindow();\n            this.command.emit({\n                command: this.button.command,\n                value: this.button.transform ? this.button.transform(this.value) : this.value\n            });\n            this.value = '';\n        }\n    }\n    openInputWindow() {\n        this.saveSelection();\n        this.showInputWindow = true;\n        setTimeout(() => {\n            this.margin = this.windowElement.nativeElement.getBoundingClientRect().width < APPROX_WIDTH_THRESHOLD ? MARGIN_OFFSET : 0;\n            this.opacity = 1;\n            this.inputElement.nativeElement.focus();\n        });\n    }\n    closeInputWindow() {\n        this.showInputWindow = false;\n        this.margin = 0;\n        this.opacity = 0;\n    }\n    outsideClick($event) {\n        if (!this.element.nativeElement.contains($event.target) && this.showInputWindow) {\n            this.closeInputWindow();\n        }\n    }\n    loadSelection() {\n        const selection = this.document.defaultView.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(this.selectionRange);\n        this.selectionRange = null;\n    }\n    saveSelection() {\n        const selection = this.document.defaultView.getSelection();\n        this.selectionRange = selection.rangeCount === 0 ? null : selection.getRangeAt(0);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.3.2\", ngImport: i0, type: EditorInputComponent, deps: [{ token: i0.ElementRef }, { token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.3.2\", type: EditorInputComponent, selector: \"st-input\", inputs: { button: \"button\", state: \"state\" }, outputs: { command: \"command\" }, host: { listeners: { \"document:click\": \"outsideClick($event)\" } }, viewQueries: [{ propertyName: \"inputElement\", first: true, predicate: [\"input\"], descendants: true }, { propertyName: \"windowElement\", first: true, predicate: [\"window\"], descendants: true }], ngImport: i0, template: \"<st-button [button]=\\\"button\\\" [state]=\\\"state\\\" (command)=\\\"openInputWindow()\\\"></st-button>\\n<div *ngIf=\\\"showInputWindow\\\" #window class=\\\"st-input-window\\\" (keyup.escape)=\\\"closeInputWindow()\\\" [style.margin-left.px]=\\\"margin\\\" [style.opacity]=\\\"opacity\\\">\\n  <label *ngIf=\\\"button?.label\\\" class=\\\"st-input-label\\\">{{button?.label}}</label>\\n  <div>\\n    <input #input class=\\\"st-input-input\\\" type=\\\"text\\\" [title]=\\\"button?.label\\\" [(ngModel)]=\\\"value\\\">\\n    <button class=\\\"st-input-button\\\" (click)=\\\"onCommand()\\\">Confirm</button>\\n  </div>\\n</div>\\n\", styles: [\".st-toolbar-item,.st-input-button{border:0;padding:8px 14px;background-color:#fff;border-radius:5px;margin-right:1px;cursor:pointer}.st-toolbar-item:hover,.st-input-button:hover{background-color:#e0e0e0}.st-toolbar-item:focus,.st-input-button:focus{outline-color:#424242}.st-input-window{display:flex;flex-direction:column;background-color:#fff;position:absolute;padding:10px;top:5px;border:1px solid #bdbdbd;border-radius:5px;box-shadow:0 3px 7px #bdbdbd}.st-input-input{padding:8px 14px;background-color:#fff;margin-right:-1px;border:1px solid #bdbdbd;border-bottom-left-radius:5px;border-top-left-radius:5px}.st-input-button{margin-right:0;border-bottom-left-radius:0;border-top-left-radius:0;border:1px solid #bdbdbd}.st-input-label{font-size:14px;font-weight:700}\\n\"], dependencies: [{ kind: \"directive\", type: i2$1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i2.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { kind: \"directive\", type: i2.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { kind: \"directive\", type: i2.NgModel, selector: \"[ngModel]:not([formControlName]):not([formControl])\", inputs: [\"name\", \"disabled\", \"ngModel\", \"ngModelOptions\"], outputs: [\"ngModelChange\"], exportAs: [\"ngModel\"] }, { kind: \"component\", type: EditorButtonComponent, selector: \"st-button\", inputs: [\"button\", \"state\"], outputs: [\"command\"] }] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.3.2\", ngImport: i0, type: EditorInputComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'st-input', template: \"<st-button [button]=\\\"button\\\" [state]=\\\"state\\\" (command)=\\\"openInputWindow()\\\"></st-button>\\n<div *ngIf=\\\"showInputWindow\\\" #window class=\\\"st-input-window\\\" (keyup.escape)=\\\"closeInputWindow()\\\" [style.margin-left.px]=\\\"margin\\\" [style.opacity]=\\\"opacity\\\">\\n  <label *ngIf=\\\"button?.label\\\" class=\\\"st-input-label\\\">{{button?.label}}</label>\\n  <div>\\n    <input #input class=\\\"st-input-input\\\" type=\\\"text\\\" [title]=\\\"button?.label\\\" [(ngModel)]=\\\"value\\\">\\n    <button class=\\\"st-input-button\\\" (click)=\\\"onCommand()\\\">Confirm</button>\\n  </div>\\n</div>\\n\", styles: [\".st-toolbar-item,.st-input-button{border:0;padding:8px 14px;background-color:#fff;border-radius:5px;margin-right:1px;cursor:pointer}.st-toolbar-item:hover,.st-input-button:hover{background-color:#e0e0e0}.st-toolbar-item:focus,.st-input-button:focus{outline-color:#424242}.st-input-window{display:flex;flex-direction:column;background-color:#fff;position:absolute;padding:10px;top:5px;border:1px solid #bdbdbd;border-radius:5px;box-shadow:0 3px 7px #bdbdbd}.st-input-input{padding:8px 14px;background-color:#fff;margin-right:-1px;border:1px solid #bdbdbd;border-bottom-left-radius:5px;border-top-left-radius:5px}.st-input-button{margin-right:0;border-bottom-left-radius:0;border-top-left-radius:0;border:1px solid #bdbdbd}.st-input-label{font-size:14px;font-weight:700}\\n\"] }]\n        }], ctorParameters: () => [{ type: i0.ElementRef }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }], propDecorators: { button: [{\n                type: Input\n            }], state: [{\n                type: Input\n            }], command: [{\n                type: Output\n            }], inputElement: [{\n                type: ViewChild,\n                args: ['input', { static: false }]\n            }], windowElement: [{\n                type: ViewChild,\n                args: ['window', { static: false }]\n            }], outsideClick: [{\n                type: HostListener,\n                args: ['document:click', ['$event']]\n            }] } });\n\nclass EditorSelectComponent {\n    constructor() {\n        this.command = new EventEmitter();\n    }\n    ngOnInit() {\n        if (!this.state && this.button.items.length) {\n            this.state = this.button.items[0].value;\n        }\n    }\n    onCommand(command, value) {\n        this.command.emit({ command, value });\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.3.2\", ngImport: i0, type: EditorSelectComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.3.2\", type: EditorSelectComponent, selector: \"st-select\", inputs: { button: \"button\", state: \"state\" }, outputs: { command: \"command\" }, ngImport: i0, template: \"<select [ngModel]=\\\"state\\\" [title]=\\\"button?.title || ''\\\" (ngModelChange)=\\\"onCommand(button?.command, $event)\\\" class=\\\"st-select st-toolbar-item\\\">\\n  <option *ngFor=\\\"let i of button?.items\\\" [value]=\\\"i.value\\\">{{i.label}}</option>\\n</select>\\n\", styles: [\".st-toolbar-item{border:0;padding:8px 14px;background-color:#fff;border-radius:5px;margin-right:1px;cursor:pointer}.st-toolbar-item:hover{background-color:#e0e0e0}.st-toolbar-item:focus{outline-color:#424242}option:checked{background-color:#424242;color:#fff}\\n\"], dependencies: [{ kind: \"directive\", type: i2$1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i2.NgSelectOption, selector: \"option\", inputs: [\"ngValue\", \"value\"] }, { kind: \"directive\", type: i2.ɵNgSelectMultipleOption, selector: \"option\", inputs: [\"ngValue\", \"value\"] }, { kind: \"directive\", type: i2.SelectControlValueAccessor, selector: \"select:not([multiple])[formControlName],select:not([multiple])[formControl],select:not([multiple])[ngModel]\", inputs: [\"compareWith\"] }, { kind: \"directive\", type: i2.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { kind: \"directive\", type: i2.NgModel, selector: \"[ngModel]:not([formControlName]):not([formControl])\", inputs: [\"name\", \"disabled\", \"ngModel\", \"ngModelOptions\"], outputs: [\"ngModelChange\"], exportAs: [\"ngModel\"] }] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.3.2\", ngImport: i0, type: EditorSelectComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'st-select', template: \"<select [ngModel]=\\\"state\\\" [title]=\\\"button?.title || ''\\\" (ngModelChange)=\\\"onCommand(button?.command, $event)\\\" class=\\\"st-select st-toolbar-item\\\">\\n  <option *ngFor=\\\"let i of button?.items\\\" [value]=\\\"i.value\\\">{{i.label}}</option>\\n</select>\\n\", styles: [\".st-toolbar-item{border:0;padding:8px 14px;background-color:#fff;border-radius:5px;margin-right:1px;cursor:pointer}.st-toolbar-item:hover{background-color:#e0e0e0}.st-toolbar-item:focus{outline-color:#424242}option:checked{background-color:#424242;color:#fff}\\n\"] }]\n        }], propDecorators: { button: [{\n                type: Input\n            }], state: [{\n                type: Input\n            }], command: [{\n                type: Output\n            }] } });\n\nclass EditorSeparatorComponent {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.3.2\", ngImport: i0, type: EditorSeparatorComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.3.2\", type: EditorSeparatorComponent, selector: \"st-separator\", ngImport: i0, template: \"<div class=\\\"st-divider\\\">&nbsp;</div>\\n\", styles: [\".st-toolbar-item{border:0;padding:8px 14px;background-color:#fff;border-radius:5px;margin-right:1px;cursor:pointer}.st-toolbar-item:hover{background-color:#e0e0e0}.st-toolbar-item:focus{outline-color:#424242}.st-divider{border-right:1px solid #bdbdbd;margin:0 5px 0 0;height:25px}\\n\"] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.3.2\", ngImport: i0, type: EditorSeparatorComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'st-separator', template: \"<div class=\\\"st-divider\\\">&nbsp;</div>\\n\", styles: [\".st-toolbar-item{border:0;padding:8px 14px;background-color:#fff;border-radius:5px;margin-right:1px;cursor:pointer}.st-toolbar-item:hover{background-color:#e0e0e0}.st-toolbar-item:focus{outline-color:#424242}.st-divider{border-right:1px solid #bdbdbd;margin:0 5px 0 0;height:25px}\\n\"] }]\n        }] });\n\nconst MUTATION_OBSERVER_CONFIG = {\n    attributes: true,\n    childList: true,\n    subtree: true,\n    characterData: true\n};\nclass DomModifyDirective {\n    constructor(element) {\n        this.element = element;\n        this.domModify = new EventEmitter();\n    }\n    ngOnInit() {\n        this.observer = new MutationObserver(() => {\n            this.domModify.emit();\n        });\n        this.observer.observe(this.element.nativeElement, MUTATION_OBSERVER_CONFIG);\n    }\n    ngOnDestroy() {\n        this.observer.disconnect();\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.3.2\", ngImport: i0, type: DomModifyDirective, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"17.3.2\", type: DomModifyDirective, selector: \"[stDomModify]\", outputs: { domModify: \"stDomModify\" }, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.3.2\", ngImport: i0, type: DomModifyDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[stDomModify]'\n                }]\n        }], ctorParameters: () => [{ type: i0.ElementRef }], propDecorators: { domModify: [{\n                type: Output,\n                args: ['stDomModify']\n            }] } });\n\nclass SelectionChangeDirective {\n    constructor(document, element) {\n        this.document = document;\n        this.element = element;\n        this.selectionChange = new EventEmitter();\n    }\n    selectionchange() {\n        if (this.document.activeElement === this.element.nativeElement) {\n            this.selectionChange.emit();\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.3.2\", ngImport: i0, type: SelectionChangeDirective, deps: [{ token: DOCUMENT }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"17.3.2\", type: SelectionChangeDirective, selector: \"[stSelectionChange]\", outputs: { selectionChange: \"stSelectionChange\" }, host: { listeners: { \"document:selectionchange\": \"selectionchange()\" } }, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.3.2\", ngImport: i0, type: SelectionChangeDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[stSelectionChange]'\n                }]\n        }], ctorParameters: () => [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: i0.ElementRef }], propDecorators: { selectionChange: [{\n                type: Output,\n                args: ['stSelectionChange']\n            }], selectionchange: [{\n                type: HostListener,\n                args: ['document:selectionchange']\n            }] } });\n\nclass EditorDropdownComponent {\n    constructor() {\n        this.label = '';\n        this.command = new EventEmitter();\n    }\n    set button(val) {\n        this.label = val.label;\n        if (this.width) {\n            this._button = val;\n        }\n        else {\n            this._tempButton = val;\n        }\n    }\n    get button() {\n        return this._button;\n    }\n    ngAfterViewInit() {\n        setTimeout(() => {\n            this.width = this.selectElement.nativeElement.getBoundingClientRect().width;\n            this._button = this._tempButton;\n        });\n    }\n    onCommand({ value: label }) {\n        const { command, value } = this.button.items.find(item => item.label === label);\n        this.command.emit({ command, value });\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.3.2\", ngImport: i0, type: EditorDropdownComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.3.2\", type: EditorDropdownComponent, selector: \"st-dropdown\", inputs: { button: \"button\" }, outputs: { command: \"command\" }, viewQueries: [{ propertyName: \"selectElement\", first: true, predicate: [\"select\"], descendants: true }], ngImport: i0, template: \"<select #select [title]=\\\"button?.title || ''\\\" (change)=\\\"onCommand($event.target); select.value = ''\\\" class=\\\"st-select st-toolbar-item\\\" [style.width.px]=\\\"this.width\\\">\\n  <option value=\\\"\\\" disabled selected hidden>{{label}}</option>\\n  <option *ngFor=\\\"let i of button?.items\\\" [value]=\\\"i.label\\\">{{i.label}}</option>\\n</select>\\n\", styles: [\".st-toolbar-item{border:0;padding:8px 14px;background-color:#fff;border-radius:5px;margin-right:1px;cursor:pointer}.st-toolbar-item:hover{background-color:#e0e0e0}.st-toolbar-item:focus{outline-color:#424242}\\n\"], dependencies: [{ kind: \"directive\", type: i2$1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i2.NgSelectOption, selector: \"option\", inputs: [\"ngValue\", \"value\"] }, { kind: \"directive\", type: i2.ɵNgSelectMultipleOption, selector: \"option\", inputs: [\"ngValue\", \"value\"] }] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.3.2\", ngImport: i0, type: EditorDropdownComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'st-dropdown', template: \"<select #select [title]=\\\"button?.title || ''\\\" (change)=\\\"onCommand($event.target); select.value = ''\\\" class=\\\"st-select st-toolbar-item\\\" [style.width.px]=\\\"this.width\\\">\\n  <option value=\\\"\\\" disabled selected hidden>{{label}}</option>\\n  <option *ngFor=\\\"let i of button?.items\\\" [value]=\\\"i.label\\\">{{i.label}}</option>\\n</select>\\n\", styles: [\".st-toolbar-item{border:0;padding:8px 14px;background-color:#fff;border-radius:5px;margin-right:1px;cursor:pointer}.st-toolbar-item:hover{background-color:#e0e0e0}.st-toolbar-item:focus{outline-color:#424242}\\n\"] }]\n        }], propDecorators: { selectElement: [{\n                type: ViewChild,\n                args: ['select']\n            }], button: [{\n                type: Input\n            }], command: [{\n                type: Output\n            }] } });\n\nconst DEFAULT_CONFIG = {\n    placeholder: '',\n    buttons: ST_BUTTONS,\n};\nclass EditorComponent {\n    set config(val) {\n        this._config = { ...DEFAULT_CONFIG, ...val };\n    }\n    get config() {\n        return this._config;\n    }\n    constructor(document, commandService) {\n        this.document = document;\n        this.commandService = commandService;\n        this._config = DEFAULT_CONFIG;\n        this.content = '';\n        this.toolbarItemType = ToolbarItemType;\n        this.isDisabled = false;\n        this.queryCommandState = {};\n    }\n    ngAfterViewInit() {\n        this.updateContentEditable();\n    }\n    writeValue(val) {\n        this.content = val;\n        this.updateContentEditable();\n    }\n    registerOnChange(fn) {\n        this.onChangeFn = fn;\n    }\n    registerOnTouched(fn) {\n        this.onTouchedFn = fn;\n    }\n    setDisabledState(isDisabled) {\n        this.isDisabled = isDisabled;\n    }\n    domModify() {\n        if (this.contentEditable) {\n            this.onChangeFn(this.contentEditable.nativeElement.innerHTML);\n        }\n    }\n    execCommand(command, value) {\n        this.contentEditable.nativeElement.focus();\n        this.commandService.execCommand(command, value);\n        this.fetchQueryCommandState();\n    }\n    fetchQueryCommandState() {\n        this.queryCommandState = this.commandService.getQueryCommandState(this.config.buttons);\n    }\n    trackBy(_, item) {\n        return item.name;\n    }\n    updateContentEditable() {\n        if (this.contentEditable) {\n            this.contentEditable.nativeElement.innerHTML = this.content;\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.3.2\", ngImport: i0, type: EditorComponent, deps: [{ token: DOCUMENT }, { token: CommandService }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.3.2\", type: EditorComponent, selector: \"st-editor\", inputs: { config: \"config\" }, providers: [\n            { provide: NG_VALUE_ACCESSOR, useExisting: EditorComponent, multi: true },\n            CommandService\n        ], viewQueries: [{ propertyName: \"contentEditable\", first: true, predicate: [\"contentEditable\"], descendants: true }], ngImport: i0, template: \"<div class=\\\"st-editor-container\\\" [class.disabled]=\\\"isDisabled\\\">\\n  <div class=\\\"st-toolbar\\\" tabIndex=\\\"0\\\">\\n    <ng-container *ngFor=\\\"let item of config.buttons; trackBy:trackBy\\\" [ngSwitch]=\\\"item.type\\\">\\n      <st-separator *ngSwitchCase=\\\"toolbarItemType.Separator\\\"></st-separator>\\n      <st-button *ngIf=\\\"item.type === toolbarItemType.Button\\\"\\n                                 [button]=\\\"item\\\" [state]=\\\"queryCommandState[item.command]\\\"\\n                                 (command)=\\\"execCommand($event)\\\">\\n      </st-button>\\n      <st-select *ngSwitchCase=\\\"toolbarItemType.Select\\\"\\n                         [button]=\\\"item\\\" [state]=\\\"queryCommandState[item.command]\\\"\\n                         (command)=\\\"execCommand($event.command, $event.value)\\\">\\n      </st-select>\\n      <st-color-picker *ngSwitchCase=\\\"toolbarItemType.Color\\\"\\n                               [button]=\\\"item\\\" [state]=\\\"queryCommandState[item.command]\\\"\\n                               (command)=\\\"execCommand($event.command, $event.value)\\\">\\n      </st-color-picker>\\n      <st-input *ngSwitchCase=\\\"toolbarItemType.Input\\\"\\n                        [button]=\\\"item\\\"\\n                        (command)=\\\"execCommand($event.command, $event.value)\\\">\\n      </st-input>\\n      <st-dropdown *ngSwitchCase=\\\"toolbarItemType.Dropdown\\\"\\n                [button]=\\\"item\\\"\\n                (command)=\\\"execCommand($event.command, $event.value)\\\">\\n      </st-dropdown>\\n    </ng-container>\\n  </div>\\n  <div #contentEditable class=\\\"st-area\\\"\\n       [attr.data-placeholder]=\\\"config.placeholder\\\" [attr.contenteditable]=\\\"!isDisabled\\\"\\n       (stDomModify)=\\\"domModify()\\\" (stSelectionChange)=\\\"fetchQueryCommandState()\\\" (blur)=\\\"onTouchedFn()\\\"></div>\\n</div>\\n\", styles: [\".st-toolbar-item{border:0;padding:8px 14px;background-color:#fff;border-radius:5px;margin-right:1px;cursor:pointer}.st-toolbar-item:hover{background-color:#e0e0e0}.st-toolbar-item:focus{outline-color:#424242}.st-editor-container{position:relative}.st-editor-container.disabled{pointer-events:none;opacity:.5}.st-area{resize:vertical;overflow:auto;border:1px solid #bdbdbd;border-top:0;border-bottom-left-radius:5px;border-bottom-right-radius:5px;min-height:200px;padding:5px;background-color:#fff}.st-area:focus{outline-color:#424242}.st-area:empty:not(:focus):before{content:attr(data-placeholder);color:#bdbdbd;pointer-events:none}.st-toolbar{border-top-right-radius:5px;border-top-left-radius:5px;display:flex;flex-wrap:wrap;align-items:center;border:1px solid #bdbdbd;padding:5px;background-color:#fff}.st-toolbar:focus{outline-color:#424242}\\n\"], dependencies: [{ kind: \"directive\", type: i2$1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i2$1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i2$1.NgSwitch, selector: \"[ngSwitch]\", inputs: [\"ngSwitch\"] }, { kind: \"directive\", type: i2$1.NgSwitchCase, selector: \"[ngSwitchCase]\", inputs: [\"ngSwitchCase\"] }, { kind: \"component\", type: EditorButtonComponent, selector: \"st-button\", inputs: [\"button\", \"state\"], outputs: [\"command\"] }, { kind: \"component\", type: EditorColorPickerComponent, selector: \"st-color-picker\", inputs: [\"button\", \"state\"], outputs: [\"command\"] }, { kind: \"component\", type: EditorInputComponent, selector: \"st-input\", inputs: [\"button\", \"state\"], outputs: [\"command\"] }, { kind: \"component\", type: EditorSelectComponent, selector: \"st-select\", inputs: [\"button\", \"state\"], outputs: [\"command\"] }, { kind: \"component\", type: EditorSeparatorComponent, selector: \"st-separator\" }, { kind: \"directive\", type: DomModifyDirective, selector: \"[stDomModify]\", outputs: [\"stDomModify\"] }, { kind: \"directive\", type: SelectionChangeDirective, selector: \"[stSelectionChange]\", outputs: [\"stSelectionChange\"] }, { kind: \"component\", type: EditorDropdownComponent, selector: \"st-dropdown\", inputs: [\"button\"], outputs: [\"command\"] }] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.3.2\", ngImport: i0, type: EditorComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'st-editor', providers: [\n                        { provide: NG_VALUE_ACCESSOR, useExisting: EditorComponent, multi: true },\n                        CommandService\n                    ], template: \"<div class=\\\"st-editor-container\\\" [class.disabled]=\\\"isDisabled\\\">\\n  <div class=\\\"st-toolbar\\\" tabIndex=\\\"0\\\">\\n    <ng-container *ngFor=\\\"let item of config.buttons; trackBy:trackBy\\\" [ngSwitch]=\\\"item.type\\\">\\n      <st-separator *ngSwitchCase=\\\"toolbarItemType.Separator\\\"></st-separator>\\n      <st-button *ngIf=\\\"item.type === toolbarItemType.Button\\\"\\n                                 [button]=\\\"item\\\" [state]=\\\"queryCommandState[item.command]\\\"\\n                                 (command)=\\\"execCommand($event)\\\">\\n      </st-button>\\n      <st-select *ngSwitchCase=\\\"toolbarItemType.Select\\\"\\n                         [button]=\\\"item\\\" [state]=\\\"queryCommandState[item.command]\\\"\\n                         (command)=\\\"execCommand($event.command, $event.value)\\\">\\n      </st-select>\\n      <st-color-picker *ngSwitchCase=\\\"toolbarItemType.Color\\\"\\n                               [button]=\\\"item\\\" [state]=\\\"queryCommandState[item.command]\\\"\\n                               (command)=\\\"execCommand($event.command, $event.value)\\\">\\n      </st-color-picker>\\n      <st-input *ngSwitchCase=\\\"toolbarItemType.Input\\\"\\n                        [button]=\\\"item\\\"\\n                        (command)=\\\"execCommand($event.command, $event.value)\\\">\\n      </st-input>\\n      <st-dropdown *ngSwitchCase=\\\"toolbarItemType.Dropdown\\\"\\n                [button]=\\\"item\\\"\\n                (command)=\\\"execCommand($event.command, $event.value)\\\">\\n      </st-dropdown>\\n    </ng-container>\\n  </div>\\n  <div #contentEditable class=\\\"st-area\\\"\\n       [attr.data-placeholder]=\\\"config.placeholder\\\" [attr.contenteditable]=\\\"!isDisabled\\\"\\n       (stDomModify)=\\\"domModify()\\\" (stSelectionChange)=\\\"fetchQueryCommandState()\\\" (blur)=\\\"onTouchedFn()\\\"></div>\\n</div>\\n\", styles: [\".st-toolbar-item{border:0;padding:8px 14px;background-color:#fff;border-radius:5px;margin-right:1px;cursor:pointer}.st-toolbar-item:hover{background-color:#e0e0e0}.st-toolbar-item:focus{outline-color:#424242}.st-editor-container{position:relative}.st-editor-container.disabled{pointer-events:none;opacity:.5}.st-area{resize:vertical;overflow:auto;border:1px solid #bdbdbd;border-top:0;border-bottom-left-radius:5px;border-bottom-right-radius:5px;min-height:200px;padding:5px;background-color:#fff}.st-area:focus{outline-color:#424242}.st-area:empty:not(:focus):before{content:attr(data-placeholder);color:#bdbdbd;pointer-events:none}.st-toolbar{border-top-right-radius:5px;border-top-left-radius:5px;display:flex;flex-wrap:wrap;align-items:center;border:1px solid #bdbdbd;padding:5px;background-color:#fff}.st-toolbar:focus{outline-color:#424242}\\n\"] }]\n        }], ctorParameters: () => [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: CommandService }], propDecorators: { config: [{\n                type: Input\n            }], contentEditable: [{\n                type: ViewChild,\n                args: ['contentEditable']\n            }] } });\n\nclass NgxSimpleTextEditorModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.3.2\", ngImport: i0, type: NgxSimpleTextEditorModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"17.3.2\", ngImport: i0, type: NgxSimpleTextEditorModule, declarations: [EditorComponent,\n            EditorButtonComponent,\n            EditorColorPickerComponent,\n            EditorInputComponent,\n            EditorSelectComponent,\n            EditorSeparatorComponent,\n            DomModifyDirective,\n            SelectionChangeDirective,\n            EditorDropdownComponent], imports: [CommonModule,\n            FormsModule,\n            ReactiveFormsModule], exports: [EditorComponent,\n            EditorButtonComponent,\n            EditorColorPickerComponent,\n            EditorInputComponent,\n            EditorSelectComponent,\n            EditorSeparatorComponent,\n            EditorDropdownComponent] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"17.3.2\", ngImport: i0, type: NgxSimpleTextEditorModule, imports: [CommonModule,\n            FormsModule,\n            ReactiveFormsModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.3.2\", ngImport: i0, type: NgxSimpleTextEditorModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [\n                        EditorComponent,\n                        EditorButtonComponent,\n                        EditorColorPickerComponent,\n                        EditorInputComponent,\n                        EditorSelectComponent,\n                        EditorSeparatorComponent,\n                        DomModifyDirective,\n                        SelectionChangeDirective,\n                        EditorDropdownComponent,\n                    ],\n                    imports: [\n                        CommonModule,\n                        FormsModule,\n                        ReactiveFormsModule,\n                    ],\n                    exports: [\n                        EditorComponent,\n                        EditorButtonComponent,\n                        EditorColorPickerComponent,\n                        EditorInputComponent,\n                        EditorSelectComponent,\n                        EditorSeparatorComponent,\n                        EditorDropdownComponent,\n                    ]\n                }]\n        }] });\n\n/*\n * Public API Surface of ngx-simple-text-editor\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BOLD_BUTTON, CUSTOM, EditorButtonComponent, EditorColorPickerComponent, EditorComponent, EditorDropdownComponent, EditorInputComponent, EditorSelectComponent, EditorSeparatorComponent, FONT_SIZE_SELECT, FORE_COLOR, IMAGE_INPUT, INDENT_BUTTON, ITALIC_BUTTON, JUSTIFY_CENTER_BUTTON, JUSTIFY_FULL_BUTTON, JUSTIFY_LEFT_BUTTON, JUSTIFY_RIGHT_BUTTON, LINK_INPUT, NgxSimpleTextEditorModule, ORDERED_LIST_BUTTON, OUTDENT_BUTTON, REDO_BUTTON, REMOVE_FORMAT_BUTTON, SEPARATOR, STRIKE_THROUGH_BUTTON, ST_BUTTONS, SUBSCRIPT_BUTTON, SUPERSCRIPT_BUTTON, ToolbarItemType, UNDERLINE_BUTTON, UNDO_BUTTON, UNLINK_BUTTON, UNORDERED_LIST_BUTTON };\n","<div *ngIf=\"data && data['hydra:member'] && data['hydra:totalItems'] > 0\">\n  <table class=\"table table-bordered\" role=\"table\">\n    <thead>\n      <tr class=\"table-row text-center\" role=\"rowgroup\">\n        <th *ngFor=\"let head of getArrayFieldsFromJSON(data['hydra:member'][0])\" role=\"columnheader\" scope=\"col\">\n          {{ head | translate }}\n        </th>\n        <th role=\"columnheader\" scope=\"col\">{{ 'ACTIONS' | translate }}</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let row of data['hydra:member']\" class=\"table-body table-row text-center\" role=\"rowgroup\">\n        <td *ngFor=\"let column of getArrayDataFromJSON(row)\" role=\"cell\">\n          {{ column }}\n        </td>\n        <td role=\"cell\">\n          <button class=\"btn p-0\" [routerLink]=\"['/admin/edit/', currentType, row.id]\">\n            <img\n              src=\"https://material-icons.github.io/material-icons/svg/edit/baseline.svg\"\n              alt=\"{{ 'EDIT' | translate }}\"\n              title=\"{{ 'EDIT' | translate }}\"\n              class=\"d-inline-block align-top\"\n            />\n          </button>\n          <button class=\"btn ms-2 p-0\" (click)=\"deleteByID(row.id)\">\n            <img\n              src=\"https://material-icons.github.io/material-icons/svg/delete/baseline.svg\"\n              alt=\"{{ 'DELETE' | translate }}\"\n              title=\"{{ 'DELETE' | translate }}\"\n              class=\"d-inline-block align-top\"\n            />\n          </button>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n  <p>{{ 'TOTAL_ITEMS' | translate }}: {{ data['hydra:totalItems'] }}</p>\n  <!--todo: paginator component-->\n  <!--\n  <nav aria-label=\"Page navigation example\">\n    <ul class=\"pagination\">\n      <li class=\"page-item\"><a class=\"page-link\" href=\"#\">Previous</a></li>\n      <li class=\"page-item\"><a class=\"page-link\" href=\"#\">1</a></li>\n      <li class=\"page-item\"><a class=\"page-link\" href=\"#\">2</a></li>\n      <li class=\"page-item\"><a class=\"page-link\" href=\"#\">Next</a></li>\n    </ul>\n  </nav>\n  -->\n</div>\n","import { Component, Input } from '@angular/core';\nimport { environment } from '../../../../../environments/environment';\nimport { HttpClient } from '@angular/common/http';\nimport { ToastrService } from 'ngx-toastr';\nimport { TranslateService, TranslateModule } from '@ngx-translate/core';\nimport { catchError } from 'rxjs/operators';\nimport { throwError } from 'rxjs';\nimport { RouterLink } from '@angular/router';\nimport { NgIf, NgFor } from '@angular/common';\n\n@Component({\n  selector: 'app-table',\n  templateUrl: './table.component.html',\n  styleUrls: ['./table.component.sass'],\n  standalone: true,\n  imports: [NgIf, NgFor, RouterLink, TranslateModule],\n})\nexport class TableComponent {\n  @Input() data: Object;\n  @Input() currentType: string;\n  fields: any;\n\n  constructor(\n    private http: HttpClient,\n    private toaster: ToastrService,\n    private translateService: TranslateService,\n  ) {}\n\n  getArrayDataFromJSON(json) {\n    let data = [];\n    for (let field of this.fields) {\n      data.push(json[field]);\n    }\n    return data;\n  }\n\n  getArrayFieldsFromJSON(json = []) {\n    this.fields = this.internalFieldsFilter(Object.keys(json));\n\n    return this.fields;\n  }\n\n  internalFieldsFilter(array: any[]) {\n    const fieldsToRemoveFromResponse = ['@id', '@type'];\n\n    return array.filter((value) => fieldsToRemoveFromResponse.indexOf(value) < 0);\n  }\n\n  deleteByID(id: number) {\n    return this.http\n      .delete(environment.apiUrl + '/' + this.currentType + '/' + id, { observe: 'response' })\n      .pipe(\n        catchError((err) => {\n          this.toaster.error(err.error.error);\n          return throwError(err);\n        }),\n      )\n      .subscribe(() => {\n        this.toaster.success(this.translateService.instant('DELETED'));\n        const deleted = this.data['hydra:member'].find((x) => x.id === id);\n        this.data['hydra:member'].splice(this.data['hydra:member'].indexOf(deleted), 1);\n        this.data['hydra:totalItems'] -= 1;\n      });\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { SubjectService } from '../../../../services/subject.service';\nimport { UnitService } from '../../../../services/unit.service';\nimport { ExerciseService } from '../../../../services/exercise.service';\nimport { Observable } from 'rxjs';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { AsyncPipe } from '@angular/common';\nimport { TableComponent } from '../../components/table/table.component';\nimport { RouterLink } from '@angular/router';\n\n@Component({\n  selector: 'app-admin',\n  templateUrl: './admin.component.html',\n  standalone: true,\n  imports: [RouterLink, TableComponent, AsyncPipe, TranslateModule],\n})\nexport class AdminComponent implements OnInit {\n  //page: number = 1;\n\n  currentTab: string;\n  currentService: SubjectService | UnitService | ExerciseService;\n\n  subjects$: Observable<any>;\n  units$: Observable<any>;\n  exercises$: Observable<any>;\n\n  constructor(\n    public subjectService: SubjectService,\n    public unitService: UnitService,\n    public exerciseService: ExerciseService,\n  ) {}\n\n  ngOnInit(): void {\n    //Load all items: (prefetch all)\n    this.subjects$ = this.subjectService.get(/*{page: this.page}*/);\n    this.units$ = this.unitService.get(/*{page: this.page}*/);\n    this.exercises$ = this.exerciseService.get(/*{page: this.page}*/);\n\n    //Set default tab and service:\n    this.currentTab = 'subjects';\n    this.currentService = this.subjectService;\n  }\n\n  setCurrentNav(event: Event | any): void {\n    this.currentTab = event.target.id;\n  }\n\n  setCurrentData(): void {\n    switch (this.currentTab) {\n      case 'subjects':\n        this.currentService = this.subjectService;\n        this.subjects$ = this.subjectService.get(/*{page: this.page}*/);\n        break;\n      case 'units':\n        this.currentService = this.unitService;\n        this.units$ = this.unitService.get(/*{page: this.page}*/);\n        break;\n      case 'exercises':\n        this.currentService = this.exerciseService;\n        this.exercises$ = this.exerciseService.get(/*{page: this.page}*/);\n        break;\n    }\n  }\n}\n","<ul class=\"nav nav-tabs\" role=\"tablist\">\n  <li class=\"nav-item\" role=\"presentation\">\n    <button\n      (click)=\"setCurrentNav($event)\"\n      class=\"nav-link active\"\n      id=\"subjects\"\n      data-bs-toggle=\"tab\"\n      data-bs-target=\"#nav-subjects\"\n      type=\"button\"\n      role=\"tab\"\n      aria-controls=\"nav-subjects\"\n      aria-selected=\"true\"\n    >\n      {{ 'SUBJECTS' | translate }}\n    </button>\n  </li>\n  <li class=\"nav-item\" role=\"presentation\">\n    <button\n      (click)=\"setCurrentNav($event)\"\n      class=\"nav-link\"\n      id=\"units\"\n      data-bs-toggle=\"tab\"\n      data-bs-target=\"#nav-units\"\n      type=\"button\"\n      role=\"tab\"\n      aria-controls=\"nav-units\"\n      aria-selected=\"false\"\n    >\n      {{ 'UNITS' | translate }}\n    </button>\n  </li>\n  <li class=\"nav-item\" role=\"presentation\">\n    <button\n      (click)=\"setCurrentNav($event)\"\n      class=\"nav-link\"\n      id=\"exercises\"\n      data-bs-toggle=\"tab\"\n      data-bs-target=\"#nav-exercises\"\n      type=\"button\"\n      role=\"tab\"\n      aria-controls=\"nav-exercises\"\n      aria-selected=\"false\"\n    >\n      {{ 'EXERCISES' | translate }}\n    </button>\n  </li>\n  <li class=\"nav-item\" role=\"presentation\">\n    <button [routerLink]=\"['/admin/new/', currentTab]\" class=\"nav-link\" type=\"button\" role=\"button\" aria-selected=\"false\">\n      <img\n        src=\"https://material-icons.github.io/material-icons/svg/add/baseline.svg\"\n        alt=\"{{ 'ADD' | translate }}\"\n        title=\"{{ 'ADD' | translate }}\"\n        class=\"d-inline-block align-top\"\n      />\n    </button>\n  </li>\n</ul>\n<div class=\"tab-content\">\n  <div class=\"tab-pane fade show active\" id=\"nav-subjects\" role=\"tabpanel\" aria-labelledby=\"subjects\">\n    <app-table [currentType]=\"currentTab\" [data]=\"subjects$ | async\"></app-table>\n  </div>\n  <div class=\"tab-pane fade\" id=\"nav-units\" role=\"tabpanel\" aria-labelledby=\"units\">\n    <app-table [currentType]=\"currentTab\" [data]=\"units$ | async\"></app-table>\n  </div>\n  <div class=\"tab-pane fade\" id=\"nav-exercises\" role=\"tabpanel\" aria-labelledby=\"exercises\">\n    <app-table [currentType]=\"currentTab\" [data]=\"exercises$ | async\"></app-table>\n  </div>\n</div>\n","export default class Utils {\n  /**\n   * Filter the response form the API for get only the useful fields:\n   * @param array\n   */\n  static internalFieldsFilter(array) {\n    const fieldsToRemoveFromResponse = ['@id', '@type', '@context'];\n\n    return array.filter((value) => fieldsToRemoveFromResponse.indexOf(value) < 0);\n  }\n}\n","<form class=\"mb-3\" [formGroup]=\"form\">\n  <div *ngFor=\"let field of fields; let i = index\" class=\"mt-2\">\n    <label [for]=\"field\" class=\"form-label\" role=\"button\">{{ field | translate }}</label>\n    <input *ngIf=\"field !== 'text'\" type=\"text\" class=\"form-control\" [id]=\"field\" [formControl]=\"formControlsArray[i]\" />\n    <!--todo question improvement for show false or true / text-->\n    <st-editor *ngIf=\"item === 'units' && field === 'text'\" [formControl]=\"formControlsArray[i]\" [config]=\"config\"></st-editor>\n  </div>\n  <div class=\"form-actions mt-3 text-center\">\n    <button type=\"submit\" class=\"btn btn-outline-primary me-3\" (click)=\"submit()\">{{ 'SAVE' | translate }}</button>\n    <button (click)=\"backClicked()\" class=\"btn btn-outline\">{{ 'GO_BACK' | translate }}</button>\n  </div>\n</form>\n","import { Component, OnInit } from '@angular/core';\nimport { Location, NgFor, NgIf } from '@angular/common';\nimport { ActivatedRoute } from '@angular/router';\nimport { UntypedFormBuilder, UntypedFormGroup, Validators, FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { TranslateService, TranslateModule } from '@ngx-translate/core';\nimport { EditorConfig, UNDO_BUTTON, SEPARATOR, BOLD_BUTTON, ITALIC_BUTTON, NgxSimpleTextEditorModule } from 'ngx-simple-text-editor';\nimport { ToastrService } from 'ngx-toastr';\nimport { throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { SubjectService } from '../../../../services/subject.service';\nimport { UnitService } from '../../../../services/unit.service';\nimport { ExerciseService } from '../../../../services/exercise.service';\nimport Utils from '../../../../utils';\n\n@Component({\n  selector: 'app-new-item',\n  templateUrl: './edit-item.component.html',\n  standalone: true,\n  imports: [FormsModule, ReactiveFormsModule, NgFor, NgIf, NgxSimpleTextEditorModule, TranslateModule],\n})\nexport class EditItemComponent implements OnInit {\n  id: number;\n  item: string;\n  currentService: SubjectService | UnitService | ExerciseService;\n  fields: any;\n  data: Object;\n  htmlContent = '';\n\n  config: EditorConfig = {\n    buttons: [UNDO_BUTTON, SEPARATOR, BOLD_BUTTON, ITALIC_BUTTON],\n  };\n\n  form: UntypedFormGroup;\n  formControlsArray = [];\n\n  constructor(\n    public route: ActivatedRoute,\n    public subjectService: SubjectService,\n    public unitService: UnitService,\n    public exerciseService: ExerciseService,\n    private _formBuilder: UntypedFormBuilder,\n    private toaster: ToastrService,\n    private translateService: TranslateService,\n    private _location: Location,\n  ) {\n    this.form = this._formBuilder.group({\n      formControlsArray: this._formBuilder.array([]),\n    });\n  }\n\n  ngOnInit(): void {\n    this.route.paramMap.subscribe((params) => {\n      this.item = params.get('item');\n      switch (this.item) {\n        case 'subjects':\n          this.currentService = this.subjectService;\n          break;\n        case 'units':\n          this.currentService = this.unitService;\n          break;\n        case 'exercises':\n          this.currentService = this.exerciseService;\n          break;\n      }\n\n      if (params.get('id')) {\n        this.id = parseInt(params.get('id'));\n      }\n\n      this.currentService.getOne(this.id).subscribe((details) => {\n        this.data = details;\n        this.fields = Utils.internalFieldsFilter(Object.keys(details));\n\n        for (let field of this.fields) {\n          //create form controls dynamically:\n          let form = this._formBuilder.control(\n            {\n              value: this.data[field],\n              disabled: field === 'id',\n            },\n            Validators.required,\n          );\n\n          this.formControlsArray.push(form);\n          this.form.addControl(field, form);\n        }\n      });\n    });\n  }\n\n  backClicked() {\n    this._location.back();\n  }\n\n  submit() {\n    this.currentService\n      .edit(this.id, this.form.value)\n      .pipe(\n        catchError((err) => {\n          this.toaster.error(err.error['hydra:description']);\n          return throwError(err);\n        }),\n      )\n      .subscribe(() => {\n        this.toaster.success(this.translateService.instant('EDITED'));\n      });\n  }\n}\n","<form class=\"mb-3\" [formGroup]=\"form\">\n  <div *ngFor=\"let field of fields; let i = index\" class=\"mt-2\">\n    <label [for]=\"field\" class=\"form-label\" role=\"button\">{{ field | translate }}</label>\n    <input *ngIf=\"field !== 'text'\" type=\"text\" class=\"form-control\" [id]=\"field\" [formControl]=\"formControlsArray[i]\" />\n    <!--todo question improvement for show false or true / text-->\n    <st-editor *ngIf=\"item === 'units' && field === 'text'\" [formControl]=\"formControlsArray[i]\" [config]=\"config\"></st-editor>\n  </div>\n  <div class=\"form-actions mt-3 text-center\">\n    <button type=\"submit\" class=\"btn btn-outline-primary me-3\" (click)=\"submit()\">{{ 'SAVE' | translate }}</button>\n    <button (click)=\"backClicked()\" class=\"btn btn-outline\">{{ 'GO_BACK' | translate }}</button>\n  </div>\n</form>\n","import { Component, OnInit } from '@angular/core';\nimport { Location, NgFor, NgIf } from '@angular/common';\nimport { ActivatedRoute } from '@angular/router';\nimport { UntypedFormBuilder, UntypedFormGroup, Validators, FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ToastrService } from 'ngx-toastr';\nimport { TranslateService, TranslateModule } from '@ngx-translate/core';\nimport { catchError } from 'rxjs/operators';\nimport { throwError } from 'rxjs';\nimport { BOLD_BUTTON, EditorConfig, ITALIC_BUTTON, SEPARATOR, UNDO_BUTTON, NgxSimpleTextEditorModule } from 'ngx-simple-text-editor';\nimport { SubjectService } from '../../../../services/subject.service';\nimport { UnitService } from '../../../../services/unit.service';\nimport { ExerciseService } from '../../../../services/exercise.service';\n\n@Component({\n  selector: 'app-new-item',\n  templateUrl: './new-item.component.html',\n  standalone: true,\n  imports: [FormsModule, ReactiveFormsModule, NgFor, NgIf, NgxSimpleTextEditorModule, TranslateModule],\n})\nexport class NewItemComponent implements OnInit {\n  item: string;\n  currentService: SubjectService | UnitService | ExerciseService;\n  fields: string[];\n  form: UntypedFormGroup;\n  formControlsArray = [];\n\n  config: EditorConfig = {\n    buttons: [UNDO_BUTTON, SEPARATOR, BOLD_BUTTON, ITALIC_BUTTON],\n  };\n\n  constructor(\n    public route: ActivatedRoute,\n    public subjectService: SubjectService,\n    public unitService: UnitService,\n    public exerciseService: ExerciseService,\n    private _formBuilder: UntypedFormBuilder,\n    private toaster: ToastrService,\n    private translateService: TranslateService,\n    private _location: Location,\n  ) {\n    this.form = this._formBuilder.group({\n      formControlsArray: this._formBuilder.array([]),\n    });\n  }\n\n  ngOnInit(): void {\n    this.route.paramMap.subscribe((params) => {\n      this.item = params.get('item');\n      switch (this.item) {\n        case 'subjects':\n          this.currentService = this.subjectService;\n          this.fields = ['name', 'course'];\n          break;\n        case 'units':\n          this.currentService = this.unitService;\n          this.fields = ['title', 'text', 'subject'];\n          break;\n        case 'exercises':\n          this.currentService = this.exerciseService;\n          this.fields = ['title', 'question', 'answer', 'unit'];\n          break;\n      }\n\n      for (let field of this.fields) {\n        //create form controls dynamically:\n        let form = this._formBuilder.control('', Validators.required);\n\n        this.formControlsArray.push(form);\n        this.form.addControl(field, form);\n      }\n    });\n  }\n\n  backClicked() {\n    this._location.back();\n  }\n\n  submit() {\n    this.currentService\n      .add(this.form.value)\n      .pipe(\n        catchError((err) => {\n          this.toaster.error(err.error['hydra:description']);\n          return throwError(err);\n        }),\n      )\n      .subscribe(() => {\n        this.toaster.success(this.translateService.instant('ADDED'));\n      });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Router, ActivatedRouteSnapshot, RouterStateSnapshot, CanActivate } from '@angular/router';\nimport { AuthService } from './services/auth.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n  constructor(\n    private auth: AuthService,\n    private router: Router,\n    private toaster: ToastrService,\n    private translateService: TranslateService,\n  ) {}\n\n  async canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Promise<boolean> {\n    if (this.auth.isAdmin()) {\n      // logged in as admin so return true and allow navigation\n      return true;\n    }\n    if (this.auth.isUser()) {\n      // logged in as plain user so return false and warn\n      this.toaster.error(this.translateService.instant('FORBIDDEN'));\n      return false;\n    }\n    // not logged in so redirect to login page\n    this.toaster.info(this.translateService.instant('LOGIN_PLEASE'));\n    await this.router.navigate(['/auth'], { queryParams: { returnUrl: state.url } });\n    return false;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AdminComponent } from './containers/admin/admin.component';\nimport { EditItemComponent } from './components/edit-item/edit-item.component';\nimport { NewItemComponent } from './components/new-item/new-item.component';\nimport { AuthGuard } from '../auth/auth.guard';\n\nconst routes: Routes = [\n  { path: '', component: AdminComponent, canActivate: [AuthGuard] },\n  { path: 'new/:item', component: NewItemComponent, canActivate: [AuthGuard] },\n  { path: 'edit/:item/:id', component: EditItemComponent, canActivate: [AuthGuard] },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AdminRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { NgxSimpleTextEditorModule } from 'ngx-simple-text-editor';\nimport { AdminRoutingModule } from './admin-routing.module';\nimport { AdminComponent } from './containers/admin/admin.component';\nimport { TableComponent } from './components/table/table.component';\nimport { EditItemComponent } from './components/edit-item/edit-item.component';\nimport { NewItemComponent } from './components/new-item/new-item.component';\nimport { AuthGuard } from '../auth/auth.guard';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    AdminRoutingModule,\n    TranslateModule,\n    FormsModule,\n    ReactiveFormsModule,\n    NgxSimpleTextEditorModule,\n    AdminComponent,\n    TableComponent,\n    EditItemComponent,\n    NewItemComponent,\n  ],\n  providers: [AuthGuard],\n})\nexport class AdminModule {}\n"],"x_google_ignoreList":[0]}