{"version":3,"file":"638.3a78472abad4e6d9.js","mappings":"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","names":["i0","head_r3","column_r6","TableComponent_div_0_tr_9_td_1_Template","row_r4","_r8","$implicit","ctx_r7","deleteByID","id","ctx_r2","getArrayDataFromJSON","_c0","currentType","TableComponent_div_0_th_4_Template","TableComponent_div_0_tr_9_Template","ctx_r0","getArrayFieldsFromJSON","data","TableComponent","constructor","http","toastr","translateService","this","json","field","fields","push","internalFieldsFilter","Object","keys","array","fieldsToRemoveFromResponse","filter","value","indexOf","delete","environment","apiUrl","observe","pipe","catchError","err","error","throwError","subscribe","success","instant","deleted","find","x","splice","static","t","i1","i2","i3","core","Xpm","selectors","inputs","decls","vars","consts","template","rf","ctx","TableComponent_div_0_Template","AdminComponent","subjectService","unitService","exerciseService","ngOnInit","subjects$","get","units$","exercises$","currentTab","currentService","setCurrentNav","event","target","setCurrentData","$event","Utils","field_r1","ctx_r3","formControlsArray","i_r2","ctx_r4","config","EditItemComponent_div_1_input_4_Template","EditItemComponent_div_1_angular_editor_5_Template","item","EditItemComponent","route","_formBuilder","_location","htmlContent","editable","minHeight","translate","defaultParagraphSeparator","defaultFontName","toolbarHiddenButtons","customClasses","name","class","tag","form","group","paramMap","params","getOne","details","formc","control","disabled","Validators","required","addControl","backClicked","back","submit","edit","i4","i5","i6","i7","i8","EditItemComponent_div_1_Template","NewItemComponent_div_1_input_4_Template","NewItemComponent_div_1_angular_editor_5_Template","NewItemComponent","add","NewItemComponent_div_1_Template","AuthGuard","auth","router","canActivate","state","_this","_asyncToGenerator","isAdmin","isUser","info","navigate","queryParams","returnUrl","url","Yz7","factory","ɵfac","routes","path","component","AdminRoutingModule","oAB","cJS","RouterModule","forChild","AdminModule","imports","CommonModule","TranslateModule","FormsModule","ReactiveFormsModule","AngularEditorModule"],"sourceRoot":"webpack:///","sources":["./src/app/modules/admin/components/table/table.component.html","./src/app/modules/admin/components/table/table.component.ts","./src/app/modules/admin/containers/admin/admin.component.ts","./src/app/modules/admin/containers/admin/admin.component.html","./src/app/utils.ts","./src/app/modules/admin/components/edit-item/edit-item.component.html","./src/app/modules/admin/components/edit-item/edit-item.component.ts","./src/app/modules/admin/components/new-item/new-item.component.html","./src/app/modules/admin/components/new-item/new-item.component.ts","./src/app/modules/auth/auth.guard.ts","./src/app/modules/admin/admin-routing.module.ts","./src/app/modules/admin/admin.module.ts"],"sourcesContent":["<div *ngIf=\"data && data['hydra:member'] && data['hydra:totalItems'] > 0\">\n  <table class=\"table table-bordered\" role=\"table\">\n    <thead>\n      <tr class=\"table-row text-center\" role=\"rowgroup\">\n        <th *ngFor=\"let head of getArrayFieldsFromJSON(data['hydra:member'][0])\" role=\"columnheader\" scope=\"col\">\n          {{ head | translate }}\n        </th>\n        <th role=\"columnheader\" scope=\"col\">{{ 'ACTIONS' | translate }}</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let row of data['hydra:member']\" class=\"table-body table-row text-center\" role=\"rowgroup\">\n        <td *ngFor=\"let column of getArrayDataFromJSON(row)\" role=\"cell\">\n          {{ column }}\n        </td>\n        <td role=\"cell\">\n          <button class=\"btn p-0\" [routerLink]=\"['/admin/edit/', currentType, row.id]\">\n            <img\n              src=\"https://material-icons.github.io/material-icons/svg/edit/baseline.svg\"\n              alt=\"{{ 'EDIT' | translate }}\"\n              title=\"{{ 'EDIT' | translate }}\"\n              class=\"d-inline-block align-top\"\n            />\n          </button>\n          <button class=\"btn ms-2 p-0\" (click)=\"deleteByID(row.id)\">\n            <img\n              src=\"https://material-icons.github.io/material-icons/svg/delete/baseline.svg\"\n              alt=\"{{ 'DELETE' | translate }}\"\n              title=\"{{ 'DELETE' | translate }}\"\n              class=\"d-inline-block align-top\"\n            />\n          </button>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n  <p>{{ 'TOTAL_ITEMS' | translate }}: {{ data['hydra:totalItems'] }}</p>\n  <!--todo: paginator component-->\n  <!--\n  <nav aria-label=\"Page navigation example\">\n    <ul class=\"pagination\">\n      <li class=\"page-item\"><a class=\"page-link\" href=\"#\">Previous</a></li>\n      <li class=\"page-item\"><a class=\"page-link\" href=\"#\">1</a></li>\n      <li class=\"page-item\"><a class=\"page-link\" href=\"#\">2</a></li>\n      <li class=\"page-item\"><a class=\"page-link\" href=\"#\">Next</a></li>\n    </ul>\n  </nav>\n  -->\n</div>\n","import { Component, Input } from '@angular/core';\nimport { environment } from '../../../../../environments/environment';\nimport { HttpClient } from '@angular/common/http';\nimport { ToastrService } from 'ngx-toastr';\nimport { TranslateService } from '@ngx-translate/core';\nimport { catchError } from 'rxjs/operators';\nimport { throwError } from 'rxjs';\n\n@Component({\n  selector: 'app-table',\n  templateUrl: './table.component.html',\n  styleUrls: ['./table.component.sass'],\n})\nexport class TableComponent {\n  @Input() data;\n  @Input() currentType;\n  fields;\n\n  constructor(\n    private http: HttpClient,\n    private toastr: ToastrService,\n    private translateService: TranslateService,\n  ) {}\n\n  getArrayDataFromJSON(json) {\n    let data = [];\n    for (let field of this.fields) {\n      data.push(json[field]);\n    }\n    return data;\n  }\n\n  getArrayFieldsFromJSON(json = []) {\n    this.fields = this.internalFieldsFilter(Object.keys(json));\n\n    return this.fields;\n  }\n\n  internalFieldsFilter(array) {\n    const fieldsToRemoveFromResponse = ['@id', '@type'];\n\n    return array.filter((value) => fieldsToRemoveFromResponse.indexOf(value) < 0);\n  }\n\n  deleteByID(id: number) {\n    return this.http\n      .delete(environment.apiUrl + '/' + this.currentType + '/' + id, { observe: 'response' })\n      .pipe(\n        catchError((err) => {\n          this.toastr.error(err.error.error);\n          return throwError(err);\n        }),\n      )\n      .subscribe(() => {\n        this.toastr.success(this.translateService.instant('DELETED'));\n        const deleted = this.data['hydra:member'].find((x) => x.id === id);\n        this.data['hydra:member'].splice(this.data['hydra:member'].indexOf(deleted), 1);\n        this.data['hydra:totalItems'] -= 1;\n      });\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { SubjectService } from '../../../../services/subject.service';\nimport { UnitService } from '../../../../services/unit.service';\nimport { ExerciseService } from '../../../../services/exercise.service';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-admin',\n  templateUrl: './admin.component.html',\n})\nexport class AdminComponent implements OnInit {\n  //page: number = 1;\n\n  currentTab;\n  currentService;\n\n  subjects$: Observable<any>;\n  units$: Observable<any>;\n  exercises$: Observable<any>;\n\n  constructor(\n    public subjectService: SubjectService,\n    public unitService: UnitService,\n    public exerciseService: ExerciseService,\n  ) {}\n\n  ngOnInit(): void {\n    //Load all items: (prefetch all)\n    this.subjects$ = this.subjectService.get(/*{page: this.page}*/);\n    this.units$ = this.unitService.get(/*{page: this.page}*/);\n    this.exercises$ = this.exerciseService.get(/*{page: this.page}*/);\n\n    //Set default tab and service:\n    this.currentTab = 'subjects';\n    this.currentService = this.subjectService;\n  }\n\n  setCurrentNav(event) {\n    this.currentTab = event.target.id;\n  }\n\n  setCurrentData() {\n    switch (this.currentTab) {\n      case 'subjects':\n        this.currentService = this.subjectService;\n        this.subjects$ = this.subjectService.get(/*{page: this.page}*/);\n        break;\n      case 'units':\n        this.currentService = this.unitService;\n        this.units$ = this.unitService.get(/*{page: this.page}*/);\n        break;\n      case 'exercises':\n        this.currentService = this.exerciseService;\n        this.exercises$ = this.exerciseService.get(/*{page: this.page}*/);\n        break;\n    }\n  }\n}\n","<ul class=\"nav nav-tabs\" role=\"tablist\">\n  <li class=\"nav-item\" role=\"presentation\">\n    <button\n      (click)=\"setCurrentNav($event)\"\n      class=\"nav-link active\"\n      id=\"subjects\"\n      data-bs-toggle=\"tab\"\n      data-bs-target=\"#nav-subjects\"\n      type=\"button\"\n      role=\"tab\"\n      aria-controls=\"nav-subjects\"\n      aria-selected=\"true\"\n    >\n      {{ 'SUBJECTS' | translate }}\n    </button>\n  </li>\n  <li class=\"nav-item\" role=\"presentation\">\n    <button\n      (click)=\"setCurrentNav($event)\"\n      class=\"nav-link\"\n      id=\"units\"\n      data-bs-toggle=\"tab\"\n      data-bs-target=\"#nav-units\"\n      type=\"button\"\n      role=\"tab\"\n      aria-controls=\"nav-units\"\n      aria-selected=\"false\"\n    >\n      {{ 'UNITS' | translate }}\n    </button>\n  </li>\n  <li class=\"nav-item\" role=\"presentation\">\n    <button\n      (click)=\"setCurrentNav($event)\"\n      class=\"nav-link\"\n      id=\"exercises\"\n      data-bs-toggle=\"tab\"\n      data-bs-target=\"#nav-exercises\"\n      type=\"button\"\n      role=\"tab\"\n      aria-controls=\"nav-exercises\"\n      aria-selected=\"false\"\n    >\n      {{ 'EXERCISES' | translate }}\n    </button>\n  </li>\n  <li class=\"nav-item\" role=\"presentation\">\n    <button [routerLink]=\"['/admin/new/', currentTab]\" class=\"nav-link\" type=\"button\" role=\"button\" aria-selected=\"false\">\n      <img\n        src=\"https://material-icons.github.io/material-icons/svg/add/baseline.svg\"\n        alt=\"{{ 'ADD' | translate }}\"\n        title=\"{{ 'ADD' | translate }}\"\n        class=\"d-inline-block align-top\"\n      />\n    </button>\n  </li>\n</ul>\n<div class=\"tab-content\">\n  <div class=\"tab-pane fade show active\" id=\"nav-subjects\" role=\"tabpanel\" aria-labelledby=\"subjects\">\n    <app-table [currentType]=\"currentTab\" [data]=\"subjects$ | async\"></app-table>\n  </div>\n  <div class=\"tab-pane fade\" id=\"nav-units\" role=\"tabpanel\" aria-labelledby=\"units\">\n    <app-table [currentType]=\"currentTab\" [data]=\"units$ | async\"></app-table>\n  </div>\n  <div class=\"tab-pane fade\" id=\"nav-exercises\" role=\"tabpanel\" aria-labelledby=\"exercises\">\n    <app-table [currentType]=\"currentTab\" [data]=\"exercises$ | async\"></app-table>\n  </div>\n</div>\n","export default class Utils {\n  /**\n   * Filter the response form the API for get only the useful fields:\n   * @param array\n   */\n  static internalFieldsFilter(array) {\n    const fieldsToRemoveFromResponse = ['@id', '@type', '@context'];\n\n    return array.filter((value) => fieldsToRemoveFromResponse.indexOf(value) < 0);\n  }\n}\n","<form class=\"mb-3\" [formGroup]=\"form\">\n  <div *ngFor=\"let field of fields; let i = index\" class=\"mt-2\">\n    <label [for]=\"field\" class=\"form-label\" role=\"button\">{{ field | translate }}</label>\n    <input *ngIf=\"field !== 'text'\" type=\"text\" class=\"form-control\" [id]=\"field\" [formControl]=\"formControlsArray[i]\" />\n    <!--todo question improvement for show false or true / text-->\n    <angular-editor *ngIf=\"item === 'units' && field === 'text'\" [formControl]=\"formControlsArray[i]\" [config]=\"config\"></angular-editor>\n  </div>\n  <div class=\"form-actions mt-3 text-center\">\n    <button type=\"submit\" class=\"btn btn-outline-primary me-3\" (click)=\"submit()\">{{ 'SAVE' | translate }}</button>\n    <button (click)=\"backClicked()\" class=\"btn btn-outline\">{{ 'GO_BACK' | translate }}</button>\n  </div>\n</form>\n","import { Component, OnInit } from '@angular/core';\nimport { Location } from '@angular/common';\nimport { AngularEditorConfig } from '@kolkov/angular-editor';\nimport { ActivatedRoute } from '@angular/router';\nimport { SubjectService } from '../../../../services/subject.service';\nimport { UnitService } from '../../../../services/unit.service';\nimport { ExerciseService } from '../../../../services/exercise.service';\nimport { UntypedFormBuilder, UntypedFormGroup, Validators } from '@angular/forms';\nimport { ToastrService } from 'ngx-toastr';\nimport { TranslateService } from '@ngx-translate/core';\nimport { catchError } from 'rxjs/operators';\nimport { throwError } from 'rxjs';\nimport Utils from '../../../../utils';\n\n@Component({\n  selector: 'app-new-item',\n  templateUrl: './edit-item.component.html',\n})\nexport class EditItemComponent implements OnInit {\n  id;\n  item;\n  currentService;\n  fields;\n  data;\n  htmlContent = '';\n\n  config: AngularEditorConfig = {\n    editable: true,\n    minHeight: '5rem',\n    translate: 'no',\n    defaultParagraphSeparator: 'p',\n    defaultFontName: 'Arial',\n    toolbarHiddenButtons: [['bold']],\n    customClasses: [\n      {\n        name: 'quote',\n        class: 'quote',\n      },\n      {\n        name: 'redText',\n        class: 'redText',\n      },\n      {\n        name: 'titleText',\n        class: 'titleText',\n        tag: 'h1',\n      },\n    ],\n  };\n\n  form: UntypedFormGroup;\n  formControlsArray = [];\n\n  constructor(\n    public route: ActivatedRoute,\n    public subjectService: SubjectService,\n    public unitService: UnitService,\n    public exerciseService: ExerciseService,\n    private _formBuilder: UntypedFormBuilder,\n    private toastr: ToastrService,\n    private translateService: TranslateService,\n    private _location: Location,\n  ) {\n    this.form = this._formBuilder.group({\n      formControlsArray: this._formBuilder.array([]),\n    });\n  }\n\n  ngOnInit(): void {\n    this.route.paramMap.subscribe((params) => {\n      this.item = params.get('item');\n      switch (this.item) {\n        case 'subjects':\n          this.currentService = this.subjectService;\n          break;\n        case 'units':\n          this.currentService = this.unitService;\n          break;\n        case 'exercises':\n          this.currentService = this.exerciseService;\n          break;\n      }\n\n      if (params.get('id')) {\n        this.id = params.get('id');\n      }\n\n      this.currentService.getOne(this.id).subscribe((details) => {\n        this.data = details;\n        this.fields = Utils.internalFieldsFilter(Object.keys(details));\n\n        for (let field of this.fields) {\n          //create form controls dinamically:\n          let formc = this._formBuilder.control(\n            {\n              value: this.data[field],\n              disabled: field === 'id',\n            },\n            Validators.required,\n          );\n\n          this.formControlsArray.push(formc);\n          this.form.addControl(field, formc);\n        }\n      });\n    });\n  }\n\n  backClicked() {\n    this._location.back();\n  }\n\n  submit() {\n    this.currentService\n      .edit(this.id, this.form.value)\n      .pipe(\n        catchError((err) => {\n          this.toastr.error(err.error['hydra:description']);\n          return throwError(err);\n        }),\n      )\n      .subscribe(() => {\n        this.toastr.success(this.translateService.instant('EDITED'));\n      });\n  }\n}\n","<form class=\"mb-3\" [formGroup]=\"form\">\n  <div *ngFor=\"let field of fields; let i = index\" class=\"mt-2\">\n    <label [for]=\"field\" class=\"form-label\" role=\"button\">{{ field | translate }}</label>\n    <input *ngIf=\"field !== 'text'\" type=\"text\" class=\"form-control\" [id]=\"field\" [formControl]=\"formControlsArray[i]\" />\n    <!--todo question improvement for show false or true / text-->\n    <angular-editor *ngIf=\"item === 'units' && field === 'text'\" [formControl]=\"formControlsArray[i]\" [config]=\"config\"></angular-editor>\n  </div>\n  <div class=\"form-actions mt-3 text-center\">\n    <button type=\"submit\" class=\"btn btn-outline-primary me-3\" (click)=\"submit()\">{{ 'SAVE' | translate }}</button>\n    <button (click)=\"backClicked()\" class=\"btn btn-outline\">{{ 'GO_BACK' | translate }}</button>\n  </div>\n</form>\n","import { Component, OnInit } from '@angular/core';\nimport { Location } from '@angular/common';\nimport { ActivatedRoute } from '@angular/router';\nimport { SubjectService } from '../../../../services/subject.service';\nimport { UnitService } from '../../../../services/unit.service';\nimport { ExerciseService } from '../../../../services/exercise.service';\nimport { UntypedFormBuilder, UntypedFormGroup, Validators } from '@angular/forms';\nimport { ToastrService } from 'ngx-toastr';\nimport { TranslateService } from '@ngx-translate/core';\nimport { catchError } from 'rxjs/operators';\nimport { throwError } from 'rxjs';\nimport { AngularEditorConfig } from '@kolkov/angular-editor';\n\n@Component({\n  selector: 'app-new-item',\n  templateUrl: './new-item.component.html',\n})\nexport class NewItemComponent implements OnInit {\n  item;\n  currentService;\n  fields;\n  form: UntypedFormGroup;\n  formControlsArray = [];\n\n  config: AngularEditorConfig = {\n    editable: true,\n    minHeight: '5rem',\n    translate: 'no',\n    defaultParagraphSeparator: 'p',\n    defaultFontName: 'Arial',\n    toolbarHiddenButtons: [['bold']],\n    customClasses: [\n      {\n        name: 'quote',\n        class: 'quote',\n      },\n      {\n        name: 'redText',\n        class: 'redText',\n      },\n      {\n        name: 'titleText',\n        class: 'titleText',\n        tag: 'h1',\n      },\n    ],\n  };\n\n  constructor(\n    public route: ActivatedRoute,\n    public subjectService: SubjectService,\n    public unitService: UnitService,\n    public exerciseService: ExerciseService,\n    private _formBuilder: UntypedFormBuilder,\n    private toastr: ToastrService,\n    private translateService: TranslateService,\n    private _location: Location,\n  ) {\n    this.form = this._formBuilder.group({\n      formControlsArray: this._formBuilder.array([]),\n    });\n  }\n\n  ngOnInit(): void {\n    this.route.paramMap.subscribe((params) => {\n      this.item = params.get('item');\n      switch (this.item) {\n        case 'subjects':\n          this.currentService = this.subjectService;\n          this.fields = ['name', 'course'];\n          break;\n        case 'units':\n          this.currentService = this.unitService;\n          this.fields = ['title', 'text', 'subject'];\n          break;\n        case 'exercises':\n          this.currentService = this.exerciseService;\n          this.fields = ['title', 'question', 'answer', 'unit'];\n          break;\n      }\n\n      for (let field of this.fields) {\n        //create form controls dinamically:\n        let formc = this._formBuilder.control('', Validators.required);\n\n        this.formControlsArray.push(formc);\n        this.form.addControl(field, formc);\n      }\n    });\n  }\n\n  backClicked() {\n    this._location.back();\n  }\n\n  submit() {\n    this.currentService\n      .add(this.form.value)\n      .pipe(\n        catchError((err) => {\n          this.toastr.error(err.error['hydra:description']);\n          return throwError(err);\n        }),\n      )\n      .subscribe(() => {\n        this.toastr.success(this.translateService.instant('ADDED'));\n      });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Router, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { AuthService } from './services/auth.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Injectable()\nexport class AuthGuard {\n  constructor(\n    private auth: AuthService,\n    private router: Router,\n    private toastr: ToastrService,\n    private translateService: TranslateService,\n  ) {}\n\n  async canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Promise<boolean> {\n    if (this.auth.isAdmin()) {\n      // logged in as admin so return true and allow navigation\n      return true;\n    }\n    if (this.auth.isUser()) {\n      // logged in as plain user so return false and warn\n      this.toastr.error(this.translateService.instant('FORBIDDEN'));\n      return false;\n    }\n    // not logged in so redirect to login page\n    this.toastr.info(this.translateService.instant('LOGIN_PLEASE'));\n    await this.router.navigate(['/auth'], { queryParams: { returnUrl: state.url } });\n    return false;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AdminComponent } from './containers/admin/admin.component';\nimport { EditItemComponent } from './components/edit-item/edit-item.component';\nimport { NewItemComponent } from './components/new-item/new-item.component';\nimport { AuthGuard } from '../auth/auth.guard';\n\nconst routes: Routes = [\n  { path: '', component: AdminComponent, canActivate: [AuthGuard] },\n  { path: 'new/:item', component: NewItemComponent, canActivate: [AuthGuard] },\n  { path: 'edit/:item/:id', component: EditItemComponent, canActivate: [AuthGuard] },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AdminRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AdminRoutingModule } from './admin-routing.module';\nimport { AdminComponent } from './containers/admin/admin.component';\nimport { TableComponent } from './components/table/table.component';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { EditItemComponent } from './components/edit-item/edit-item.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { AngularEditorModule } from '@kolkov/angular-editor';\nimport { NewItemComponent } from './components/new-item/new-item.component';\nimport { AuthGuard } from '../auth/auth.guard';\n\n@NgModule({\n  declarations: [AdminComponent, TableComponent, EditItemComponent, NewItemComponent],\n  imports: [CommonModule, AdminRoutingModule, TranslateModule, FormsModule, ReactiveFormsModule, AngularEditorModule],\n  providers: [AuthGuard],\n})\nexport class AdminModule {}\n"],"x_google_ignoreList":[]}